<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Renci.SshNet</name>
    </assembly>
    <members>
        <member name="T:Renci.SshNet.SshClient">
            <summary>
            Provides client connection to SSH server.
            </summary>
        </member>
        <member name="T:Renci.SshNet.BaseClient">
            <summary>
            Serves as base class for client implementations, provides common client functionality.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.BaseClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Connect">
            <summary>
            Connects client to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Disconnect">
            <summary>
            Disconnects client from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.SendKeepAlive">
            <summary>
            Sends keep-alive message to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnConnecting">
            <summary>
            Called when client is connecting to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnConnected">
            <summary>
            Called when client is connected to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.OnDisconnected">
            <summary>
            Called when client is disconnected from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.EnsureConnection">
            <summary>
            Ensures that client is connected.
            </summary>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">When client not connected.</exception>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.BaseClient.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.BaseClient"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.BaseClient.Session">
            <summary>
            Gets current session.
            </summary>
        </member>
        <member name="P:Renci.SshNet.BaseClient.ConnectionInfo">
            <summary>
            Gets the connection info.
            </summary>
        </member>
        <member name="P:Renci.SshNet.BaseClient.IsConnected">
            <summary>
            Gets a value indicating whether this client is connected to the server.
            </summary>
            <value>
            	<c>true</c> if this client is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.BaseClient.KeepAliveInterval">
            <summary>
            Gets or sets the keep alive interval in seconds.
            </summary>
            <value>
            The keep alive interval in seconds.
            </value>
        </member>
        <member name="E:Renci.SshNet.BaseClient.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="F:Renci.SshNet.SshClient._forwardedPorts">
            <summary>
            Holds the list of forwarded ports
            </summary>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
        </member>
        <member name="M:Renci.SshNet.SshClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
        </member>
        <member name="M:Renci.SshNet.SshClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SshClient.AddForwardedPort``1(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Adds forwarded port to the list.
            </summary>
            <typeparam name="T">Type of forwarded port to add</typeparam>
            <param name="boundHost">The bound host.</param>
            <param name="boundPort">The bound port.</param>
            <param name="connectedHost">The connected host.</param>
            <param name="connectedPort">The connected port.</param>
            <returns>
            Forwarded port
            </returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.AddForwardedPort``1(System.UInt32,System.String,System.UInt32)">
            <summary>
            Adds forwarded port to the list bound to "localhost".
            </summary>
            <typeparam name="T">Type of forwarded port to add</typeparam>
            <param name="boundPort">The bound port.</param>
            <param name="connectedHost">The connected host.</param>
            <param name="connectedPort">The connected port.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.RemoveForwardedPort(Renci.SshNet.ForwardedPort)">
            <summary>
            Stops and removes the forwarded port from the list.
            </summary>
            <param name="port">Forwarded port.</param>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateCommand(System.String)">
            <summary>
            Creates the command to be executed.
            </summary>
            <param name="commandText">The command text.</param>
            <returns><see cref="T:Renci.SshNet.SshCommand"/> object.</returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateCommand(System.String,System.Text.Encoding)">
            <summary>
            Creates the command to be executed with specified encoding.
            </summary>
            <param name="commandText">The command text.</param>
            <param name="encoding">The encoding to use for results.</param>
            <returns><see cref="T:Renci.SshNet.SshCommand"/> object which uses specified encoding.</returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.RunCommand(System.String)">
            <summary>
            Creates and executes the command.
            </summary>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.String,System.Int32)">
            <summary>
            Creates the shell.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalMode">The terminal mode.</param>
            <param name="bufferSize">Size of the internal read buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.String)">
            <summary>
            Creates the shell.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalMode">The terminal mode.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream)">
            <summary>
            Creates the shell.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.String,System.Int32)">
            <summary>
            Creates the shell.
            </summary>
            <param name="encoding">The encoding to use to send the input.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalMode">The terminal mode.</param>
            <param name="bufferSize">Size of the internal read buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.String)">
            <summary>
            Creates the shell.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalMode">The terminal mode.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream)">
            <summary>
            Creates the shell.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <returns></returns>
        </member>
        <member name="P:Renci.SshNet.SshClient.ForwardedPorts">
            <summary>
            Gets the list of forwarded ports.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.DisconnectReason">
            <summary>
            Provides list of disconnect reason as specified by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.None">
            <summary>
            Disconnect reason is not provided.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostNotAllowedToConnect">
            <summary>
            SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolError">
            <summary>
            SSH_DISCONNECT_PROTOCOL_ERROR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.KeyExchangeFailed">
            <summary>
            SSH_DISCONNECT_KEY_EXCHANGE_FAILED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.Reserved">
            <summary>
            SSH_DISCONNECT_RESERVED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.MacError">
            <summary>
            SSH_DISCONNECT_MAC_ERROR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.CompressionError">
            <summary>
            SSH_DISCONNECT_COMPRESSION_ERROR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ServiceNotAvailable">
            <summary>
            SSH_DISCONNECT_SERVICE_NOT_AVAILABLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolVersionNotSupported">
            <summary>
            SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostKeyNotVerifiable">
            <summary>
            SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ConnectionLost">
            <summary>
            SSH_DISCONNECT_CONNECTION_LOST
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.ByApplication">
            <summary>
            SSH_DISCONNECT_BY_APPLICATION
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.TooManyConnections">
            <summary>
            SSH_DISCONNECT_TOO_MANY_CONNECTIONS
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.AuthenticationCanceledByUser">
            <summary>
            SSH_DISCONNECT_AUTH_CANCELLED_BY_USER
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.NoMoreAuthenticationMethodsAvailable">
            <summary>
            SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Transport.DisconnectReason.IllegalUserName">
            <summary>
            SSH_DISCONNECT_ILLEGAL_USER_NAME
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.ServiceName">
            <summary>
            Specifies list of supported services
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.ServiceName.UserAuthentication">
            <summary>
            ssh-userauth
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.ServiceName.Connection">
            <summary>
            ssh-connection
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_SUCCESS message.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelMessage">
            <summary>
            Base class for all channel specific SSH messages.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Message">
            <summary>
            Base class for all SSH protocol messages
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SshData">
            <summary>
            Base ssh data serialization type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.SshData._data">
            <summary>
            Data byte array that hold message unencrypted data
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.GetBytes">
            <summary>
            Gets data bytes array
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Load(System.Byte[])">
            <summary>
            Loads data from specified bytes.
            </summary>
            <param name="value">Bytes array.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.LoadBytes(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Loads data bytes into internal buffer.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ResetReader">
            <summary>
            Resets internal data reader index.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBytes">
            <summary>
            Reads all data left in internal buffer at current position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)">
            <summary>
            Reads next specified number of bytes data type from internal buffer.
            </summary>
            <param name="length">Number of bytes to read.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadByte">
            <summary>
            Reads next byte data type from internal buffer.
            </summary>
            <returns>Byte read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBoolean">
            <summary>
            Reads next boolean data type from internal buffer.
            </summary>
            <returns>Boolean read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadUInt16">
            <summary>
            Reads next uint16 data type from internal buffer.
            </summary>
            <returns>uint16 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadUInt32">
            <summary>
            Reads next uint32 data type from internal buffer.
            </summary>
            <returns>uint32 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadUInt64">
            <summary>
            Reads next uint64 data type from internal buffer.
            </summary>
            <returns>uint64 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadInt64">
            <summary>
            Reads next int64 data type from internal buffer.
            </summary>
            <returns>int64 read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadString">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBinaryString">
            <summary>
            Reads next string data type from internal buffer.
            </summary>
            <returns>string read</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadBigInteger">
            <summary>
            Reads next mpint data type from internal buffer.
            </summary>
            <returns>mpint read.</returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadNamesList">
            <summary>
            Reads next name-list data type from internal buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.ReadExtensionPair">
            <summary>
            Reads next extension-pair data type from internal buffer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Writes bytes array data into internal buffer.
            </summary>
            <param name="data">Byte array data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Byte)">
            <summary>
            Writes byte data into internal buffer.
            </summary>
            <param name="data">Byte data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Boolean)">
            <summary>
            Writes boolean data into internal buffer.
            </summary>
            <param name="data">Boolean data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.UInt16)">
            <summary>
            Writes uint16 data into internal buffer.
            </summary>
            <param name="data">uint16 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.UInt32)">
            <summary>
            Writes uint32 data into internal buffer.
            </summary>
            <param name="data">uint32 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.UInt64)">
            <summary>
            Writes uint64 data into internal buffer.
            </summary>
            <param name="data">uint64 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Int64)">
            <summary>
            Writes int64 data into internal buffer.
            </summary>
            <param name="data">int64 data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.String,System.Text.Encoding)">
            <summary>
            Writes string data into internal buffer.
            </summary>
            <param name="data">string data to write.</param>
            <param name="encoding">String text encoding to use.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.String)">
            <summary>
            Writes string data into internal buffer.
            </summary>
            <param name="data">string data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])">
            <summary>
            Writes string data into internal buffer.
            </summary>
            <param name="data">string data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Numerics.BigInteger)">
            <summary>
            Writes mpint data into internal buffer.
            </summary>
            <param name="data">mpint data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes name-list data into internal buffer.
            </summary>
            <param name="data">name-list data to write.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Writes extension-pair data into internal buffer.
            </summary>
            <param name="data">extension-pair data to write.</param>
        </member>
        <member name="P:Renci.SshNet.Common.SshData.IsEndOfData">
            <summary>
            Gets a value indicating whether all data from the buffer has been read.
            </summary>
            <value>
            	<c>true</c> if this instance is end of data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.SshData.ZeroReaderIndex">
            <summary>
            Gets the index that represents zero in current data type.
            </summary>
            <value>
            The index of the zero reader.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Message.Load``1(System.Byte[])">
            <summary>
            Loads the specified data.
            </summary>
            <typeparam name="T">SSH message type</typeparam>
            <param name="data">Message data.</param>
            <returns>SSH message object</returns>
        </member>
        <member name="M:Renci.SshNet.Messages.Message.GetBytes">
            <summary>
            Gets data bytes array
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Messages.Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Messages.Message.ZeroReaderIndex">
            <summary>
            Gets the index that represents zero in current data type.
            </summary>
            <value>
            The index of the zero reader.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber">
            <summary>
            Gets or sets the local channel number.
            </summary>
            <value>
            The local channel number.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_CLOSE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1">
            <summary>
            Represents "diffie-hellman-group1-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellman">
            <summary>
            Represents base class for Diffie Hellman key exchange algorithm
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchange">
            <summary>
            Represents base class for different key exchange algorithm implementations
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Algorithm">
            <summary>
            Represents the abstract base class from which all implementations of algorithms must inherit.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Algorithm.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateServerCipher">
            <summary>
            Creates the server side cipher to use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateClientCipher">
            <summary>
            Creates the client side cipher to use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateServerHash">
            <summary>
            Creates the server side hash algorithm to use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateClientHash">
            <summary>
            Creates the client side hash algorithm to use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateCompressor">
            <summary>
            Creates the compression algorithm to use to deflate data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CreateDecompressor">
            <summary>
            Creates the compression algorithm to use to inflate data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.ValidateExchangeHash">
            <summary>
            Validates the exchange hash.
            </summary>
            <returns>true if exchange hash is valid; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>Key exchange hash.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Hash(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Hashes the specified data bytes.
            </summary>
            <param name="hashBytes">Data to hash.</param>
            <returns>Hashed bytes</returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.SendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends SSH message to the server
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.GenerateSessionKey(System.Numerics.BigInteger,System.Byte[],System.Collections.Generic.IEnumerable{System.Byte},System.Int32)">
            <summary>
            Generates the session key.
            </summary>
            <param name="sharedKey">The shared key.</param>
            <param name="exchangeHash">The exchange hash.</param>
            <param name="key">The key.</param>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.GenerateSessionKey(System.Numerics.BigInteger,System.Collections.Generic.IEnumerable{System.Byte},System.Char,System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Generates the session key.
            </summary>
            <param name="sharedKey">The shared key.</param>
            <param name="exchangeHash">The exchange hash.</param>
            <param name="p">The p.</param>
            <param name="sessionId">The session id.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchange.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Security.KeyExchange"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchange.Session">
            <summary>
            Gets or sets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchange.SharedKey">
            <summary>
            Gets or sets key exchange shared key.
            </summary>
            <value>
            The shared key.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchange.ExchangeHash">
            <summary>
            Gets the exchange hash.
            </summary>
            <value>The exchange hash.</value>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._group">
            <summary>
            Specifies key exchange group number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._prime">
            <summary>
            Specifies key exchange prime number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientPayload">
            <summary>
            Specifies client payload
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverPayload">
            <summary>
            Specifies server payload
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientExchangeValue">
            <summary>
            Specifies client exchange number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverExchangeValue">
            <summary>
            Specifies server exchange number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._randomValue">
            <summary>
            Specifies random generated number.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._hostKey">
            <summary>
            Specifies host key data.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._signature">
            <summary>
            Specifies signature data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.ValidateExchangeHash">
            <summary>
            Validates the exchange hash.
            </summary>
            <returns>
            true if exchange hash is valid; otherwise false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.PopulateClientExchangeValue">
            <summary>
            Populates the client exchange value.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.HandleServerDhReply(System.Byte[],System.Numerics.BigInteger,System.Byte[])">
            <summary>
            Handles the server DH reply message.
            </summary>
            <param name="hostKey">The host key.</param>
            <param name="serverExchangeValue">The server exchange value.</param>
            <param name="signature">The signature.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>
            Key exchange hash.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CryptoPrivateKeyDss">
            <summary>
            Represents DSS private key
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CryptoPrivateKey">
            <summary>
            Represents base class for private keys
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CryptoKey">
            <summary>
            Represents base class for public and private keys
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoKey.Load(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Loads key specific data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoKey.GetBytes">
            <summary>
            Gets key data byte array.
            </summary>
            <returns>The data byte array.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.CryptoKey.Name">
            <summary>
            Gets key name.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKey.GetPublicKey">
            <summary>
            Gets the public key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKey.GetSignature(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Gets the signature.
            </summary>
            <param name="key">The key data bytes.</param>
            <returns></returns>
        </member>
        <member name="T:Renci.SshNet.Security.CryptoPrivateKey.SignatureKeyData">
            <summary>
            Represents signature key data structure
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKey.SignatureKeyData.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKey.SignatureKeyData.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CryptoPrivateKey.SignatureKeyData.AlgorithmName">
            <summary>
            Gets or sets the name of the algorithm.
            </summary>
            <value>
            The name of the algorithm.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CryptoPrivateKey.SignatureKeyData.Signature">
            <summary>
            Gets or sets the signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKeyDss.Load(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Loads key specific data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKeyDss.GetPublicKey">
            <summary>
            Gets the public key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKeyDss.GetSignature(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Gets the signature.
            </summary>
            <param name="key">The key data bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKeyDss.GetBytes">
            <summary>
            Gets key data byte array.
            </summary>
            <returns>
            The data byte array.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.CryptoPrivateKeyDss.Name">
            <summary>
            Gets key name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherAESCBC">
            <summary>
            Represents base class for AES based encryption.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cipher">
            <summary>
            Represents the abstract base class from which all implementations of cipher must inherit.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cipher.Init(System.Collections.Generic.IEnumerable{System.Byte},System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Initializes the cipher.
            </summary>
            <param name="key">The secret key.</param>
            <param name="vector">The initialization vector.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cipher.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Encrypted data</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cipher.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>Decrypted data</returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cipher.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cipher.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cipher.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Security.Cipher"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cipher.BlockSize">
            <summary>
            Gets or sets the block size, in bits, of the cipher operation.
            </summary>
            <value>
            The block size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.Cipher.KeySize">
            <summary>
            Gets or sets the key size, in bits, of the secret key used by the cipher.
            </summary>
            <value>
            The key size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.Cipher.Key">
            <summary>
            Gets the secret key for the cipher.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cipher.Vector">
            <summary>
            Gets the initialization vector (IV) for the cipher.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAESCBC.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherAESCBC"/> class.
            </summary>
            <param name="keyBitsSize">Size of the key bits.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAESCBC.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Encrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAESCBC.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Decrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAESCBC.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAESCBC.KeySize">
            <summary>
            Gets or sets the key size, in bits, of the secret key used by the cipher.
            </summary>
            <value>
            The key size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAESCBC.BlockSize">
            <summary>
            Gets or sets the block size, in bits, of the cipher operation.
            </summary>
            <value>
            The block size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAESCBC.KeyBitsSize">
            <summary>
            Gets the size of the key bits.
            </summary>
            <value>
            The size of the key bits.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.CipherAES128CBC">
            <summary>
            Represents AES 128 bit encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAES128CBC.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherAES128CBC"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAES128CBC.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherAES192CBC">
            <summary>
            Represents AES 192 bit encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAES192CBC.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherAES192CBC"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAES192CBC.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherAES256CBC">
            <summary>
            Represents AES 256 bit encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAES256CBC.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherAES256CBC"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAES256CBC.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.PasswordConnectionInfo">
            <summary>
            Provides connection information when password authentication method is used
            </summary>
        </member>
        <member name="T:Renci.SshNet.ConnectionInfo">
            <summary>
            Represents remote connection infroamtion base class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Renci.SshNet.ConnectionInfo"/> class from being created.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.Authenticate(Renci.SshNet.Session)">
            <summary>
            Authenticates the specified session.
            </summary>
            <param name="session">The session to be authenticated.</param>
            <returns>true if authenticated; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.OnAuthenticate">
            <summary>
            Called when connection needs to be authenticated.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.SendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends SSH message to the server.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.WaitHandle(System.Threading.WaitHandle)">
            <summary>
            Waits the handle to signal.
            </summary>
            <param name="eventWaitHandle">The event wait handle.</param>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.Session_UserAuthenticationFailureReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.FailureMessage})">
            <summary>
            Handles the UserAuthenticationFailureReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.Session_UserAuthenticationSuccessMessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.SuccessMessage})">
            <summary>
            Handles the UserAuthenticationSuccessMessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.Session_UserAuthenticationBannerMessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.BannerMessage})">
            <summary>
            Handles the UserAuthenticationBannerMessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.ConnectionInfo.Session_MessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Message})">
            <summary>
            Handles the MessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Name">
            <summary>
            Gets connection name
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.IsAuthenticated">
            <summary>
            Gets a value indicating whether connection is authenticated.
            </summary>
            <value>
            	<c>true</c> if connection is authenticated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.ErrorMessage">
            <summary>
            Gets the authentication error message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Session">
            <summary>
            Gets reference to the session object.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.KeyExchangeAlgorithms">
            <summary>
            Gets supported key exchange algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Encryptions">
            <summary>
            Gets supported encryptions for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.HmacAlgorithms">
            <summary>
            Gets supported hash algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.HostKeyAlgorithms">
            <summary>
            Gets supported host key algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.AuthenticationMethods">
            <summary>
            Gets supported authentication methods for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.CompressionAlgorithms">
            <summary>
            Gets supported compression algorithms for this connection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Host">
            <summary>
            Gets connection host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Port">
            <summary>
            Gets connection port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Username">
            <summary>
            Gets connection username.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.Timeout">
            <summary>
            Gets or sets connection timeout.
            </summary>
            <value>
            Connection timeout.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.RetryAttempts">
            <summary>
            Gets or sets number of retry attempts when session channel creation failed.
            </summary>
            <value>
            Number of retry attempts.
            </value>
        </member>
        <member name="P:Renci.SshNet.ConnectionInfo.MaxSessions">
            <summary>
            Gets or sets maximum number of session channels to be open simultaneously.
            </summary>
            <value>
            The max sessions.
            </value>
        </member>
        <member name="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner">
            <summary>
            Occurs when authentication banner is sent by the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="password">Connection password.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.OnAuthenticate">
            <summary>
            Called when connection needs to be authenticated.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.Session_UserAuthenticationSuccessMessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.SuccessMessage})">
            <summary>
            Handles the UserAuthenticationSuccessMessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.Session_UserAuthenticationFailureReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.FailureMessage})">
            <summary>
            Handles the UserAuthenticationFailureReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.Session_MessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Message})">
            <summary>
            Handles the MessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.PasswordConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.PasswordConnectionInfo.Name">
            <summary>
            Gets connection name
            </summary>
        </member>
        <member name="E:Renci.SshNet.PasswordConnectionInfo.PasswordExpired">
            <summary>
            Occurs when user's password has expired and needs to be changed.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_REPLY message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.HostKey">
            <summary>
            Gets server public host key and certificates
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.F">
            <summary>
            Gets the F value.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeReply.Signature">
            <summary>
            Gets the signature of H.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.LastAccessTime">
            <summary>
            Gets or sets the time the current file or directory was last accessed.
            </summary>
            <value>
            The time that the current file or directory was last accessed.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.LastWriteTime">
            <summary>
            Gets or sets the time when the current file or directory was last written to.
            </summary>
            <value>
            The time the current file was last written.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.Size">
            <summary>
            Gets or sets the size, in bytes, of the current file.
            </summary>
            <value>
            The size of the current file in bytes.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.UserId">
            <summary>
            Gets or sets file user id.
            </summary>
            <value>
            File user id.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupId">
            <summary>
            Gets or sets file group id.
            </summary>
            <value>
            File group id.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsSocket">
            <summary>
            Gets a value indicating whether file represents a socket.
            </summary>
            <value>
              <c>true</c> if file represents a socket; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsSymbolicLink">
            <summary>
            Gets a value indicating whether file represents a symbolic link.
            </summary>
            <value>
            	<c>true</c> if file represents a symbolic link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsRegularFile">
            <summary>
            Gets a value indicating whether file represents a regular file.
            </summary>
            <value>
            	<c>true</c> if file represents a regular file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsBlockDevice">
            <summary>
            Gets a value indicating whether file represents a block device.
            </summary>
            <value>
            	<c>true</c> if file represents a block device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsDirectory">
            <summary>
            Gets a value indicating whether file represents a directory.
            </summary>
            <value>
            	<c>true</c> if file represents a directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsCharacterDevice">
            <summary>
            Gets a value indicating whether file represents a character device.
            </summary>
            <value>
            	<c>true</c> if file represents a character device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.IsNamedPipe">
            <summary>
            Gets a value indicating whether file represents a named pipe.
            </summary>
            <value>
            	<c>true</c> if file represents a named pipe; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanRead">
            <summary>
            Gets a value indicating whether the owner can read from this file.
            </summary>
            <value>
              <c>true</c> if owner can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanWrite">
            <summary>
            Gets a value indicating whether the owner can write into this file.
            </summary>
            <value>
              <c>true</c> if owner can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanExecute">
            <summary>
            Gets a value indicating whether the owner can execute this file.
            </summary>
            <value>
              <c>true</c> if owner can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanRead">
            <summary>
            Gets a value indicating whether the group members can read from this file.
            </summary>
            <value>
              <c>true</c> if group members can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanWrite">
            <summary>
            Gets a value indicating whether the group members can write into this file.
            </summary>
            <value>
              <c>true</c> if group members can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanExecute">
            <summary>
            Gets a value indicating whether the group members can execute this file.
            </summary>
            <value>
              <c>true</c> if group members can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanRead">
            <summary>
            Gets a value indicating whether the others can read from this file.
            </summary>
            <value>
              <c>true</c> if others can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanWrite">
            <summary>
            Gets a value indicating whether the others can write into this file.
            </summary>
            <value>
              <c>true</c> if others can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanExecute">
            <summary>
            Gets a value indicating whether the others can execute this file.
            </summary>
            <value>
              <c>true</c> if others can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.Extensions">
            <summary>
            Gets or sets the extensions.
            </summary>
            <value>
            The extensions.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileAttributes.Empty">
            <summary>
            Gets the empty SftpFileAttributes instance.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Serpent">
            <summary>
            Represents the class for the Serpent algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Serpent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Serpent"/> class.
            </summary>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The implementation of the class derived from the symmetric algorithm is not valid.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Serpent.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Serpent"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Serpent.CreateDecryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric decryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Serpent.CreateEncryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric encryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Serpent.GenerateIV">
            <summary>
            Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Serpent.GenerateKey">
            <summary>
            Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Serpent.Mode">
            <summary>
            Gets or sets the mode for operation of the symmetric algorithm.
            </summary>
            <returns>The mode for operation of the symmetric algorithm. The default is <see cref="F:System.Security.Cryptography.CipherMode.CBC"/>.</returns>
              
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cipher mode is not one of the <see cref="T:System.Security.Cryptography.CipherMode"/> values. </exception>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo">
            <summary>
            Represents "window-change" type channel request information
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.RequestInfo">
            <summary>
            Represents type specific information for channel request.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestInfo.WantReply">
            <summary>
            Gets or sets a value indicating whether reply message is needed.
            </summary>
            <value>
              <c>true</c> if reply message is needed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.NAME">
            <summary>
            Channe request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo"/> class.
            </summary>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Columns">
            <summary>
            Gets the columns.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Rows">
            <summary>
            Gets the rows.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.WindowChangeRequestInfo.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo">
            <summary>
            Used to open "x11" channel type
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo">
            <summary>
            Base class for open channel messages
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ChannelOpenInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessageNone">
            <summary>
            Represents "none" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_REQUEST message. Server as a base message for other user authentication requests.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessage.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessage"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.Username">
            <summary>
            Gets authentication username.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessage.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageNone.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageNone.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageNone.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.SuccessMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_SUCCESS message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.SuccessMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.SuccessMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.NewKeysMessage">
            <summary>
            Represents SSH_MSG_KEXINIT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.NewKeysMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.NewKeysMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage">
            <summary>
            Represents SSH_MSG_SERVICE_ACCEPT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage">
            <summary>
            Represents SSH_MSG_GLOBAL_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
            <param name="requestName">Name of the request.</param>
            <param name="wantReply">if set to <c>true</c> [want reply].</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> class.
            </summary>
            <param name="requestName">Name of the request.</param>
            <param name="wantReply">if set to <c>true</c> [want reply].</param>
            <param name="addressToBind">The address to bind.</param>
            <param name="portToBind">The port to bind.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.WantReply">
            <summary>
            Gets a value indicating whether message reply should be sent..
            </summary>
            <value>
              <c>true</c> if message reply should be sent; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.AddressToBind">
            <summary>
            Gets the address to bind to.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.PortToBind">
            <summary>
            Gets port number to bind to.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpCommand">
            <summary>
            Base class for all SFTP Commands
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpCommand.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpCommand.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpCommand.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.BaseClient"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.KeyboardInteractiveConnectionInfo">
            <summary>
            Provides connection information when keyboard interactive authentication method is used
            </summary>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.OnAuthenticate">
            <summary>
            Called when connection needs to be authenticated.
            </summary>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Session_UserAuthenticationSuccessMessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.SuccessMessage})">
            <summary>
            Handles the UserAuthenticationSuccessMessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Session_UserAuthenticationFailureReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.FailureMessage})">
            <summary>
            Handles the UserAuthenticationFailureReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Session_MessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Message})">
            <summary>
            Handles the MessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.KeyboardInteractiveConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.KeyboardInteractiveConnectionInfo.Name">
            <summary>
            Gets connection name
            </summary>
        </member>
        <member name="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt">
            <summary>
            Occurs when server prompts for more authentication information.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_PASSWD_CHANGEREQ message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.Message">
            <summary>
            Gets password change request message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PasswordChangeRequiredMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.BannerMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_BANNER message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.BannerMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.BannerMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.BannerMessage.Message">
            <summary>
            Gets banner message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.BannerMessage.Language">
            <summary>
            Gets banner language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_SUCCESS message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="bytesToAdd">The bytes to add.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.BytesToAdd">
            <summary>
            Gets number of bytes to add to the window.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ExceptionEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.ForwardedPort.Exception"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.ExceptionEventArgs"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:Renci.SshNet.ExceptionEventArgs.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="T:Renci.SshNet.MessageEventArgs`1">
            <summary>
            Provides data for message events.
            </summary>
            <typeparam name="T">Message type</typeparam>
        </member>
        <member name="M:Renci.SshNet.MessageEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.MessageEventArgs`1"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="P:Renci.SshNet.MessageEventArgs`1.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpAsyncResult">
            <summary>
            Represents the status of an asynchronous SFTP operation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpAsyncResult.#ctor(Renci.SshNet.Sftp.SftpSession,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Sftp.SftpAsyncResult"/> class.
            </summary>
            <param name="sftpSession">The SFTP session.</param>
            <param name="commandTimeout">The command timeout.</param>
            <param name="asyncCallback">The async callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpAsyncResult.SetAsCompleted(System.Exception,System.Boolean)">
            <summary>
            Marks result as completed.
            </summary>
            <param name="exception">The exception.</param>
            <param name="completedSynchronously">if set to <c>true</c> [completed synchronously].</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpAsyncResult.EndInvoke">
            <summary>
            Ends asynchronous operation invocation.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpAsyncResult.UploadedBytes">
            <summary>
            Gets or sets the uploaded bytes.
            </summary>
            <value>The uploaded bytes.</value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpAsyncResult.DownloadedBytes">
            <summary>
            Gets or sets the downloaded bytes.
            </summary>
            <value>The downloaded bytes.</value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpAsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpAsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpAsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <returns>true if the operation is complete; otherwise, false.</returns>
        </member>
        <member name="T:Renci.SshNet.SftpClient">
            <summary>
            
            </summary>
        </member>
        <member name="F:Renci.SshNet.SftpClient._sftpSession">
            <summary>
            Holds SftpSession instance that used to communicate to the SFTP server
            </summary>
        </member>
        <member name="F:Renci.SshNet.SftpClient._asyncCommands">
            <summary>
            Keeps track of all async command execution
            </summary>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SftpClient"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Authentication username.</param>
            <param name="keyFiles">Authentication private key file(s) .</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ChangeDirectory(System.String)">
            <summary>
            Changes remote directory to path.
            </summary>
            <param name="path">New directory path.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ChangePermissions(System.String,System.Int16)">
            <summary>
            Changes permissions of file(s) to specified mode.
            </summary>
            <param name="path">File(s) path, may match multiple files.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.CreateDirectory(System.String)">
            <summary>
            Creates remote directory specified by path.
            </summary>
            <param name="path">Directory path to create.</param>
            <exception cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"></exception>
            <exception cref="T:Renci.SshNet.Common.SshException"></exception>
        </member>
        <member name="M:Renci.SshNet.SftpClient.DeleteDirectory(System.String)">
            <summary>
            Deletes remote directory specified by path.
            </summary>
            <param name="path">Directory to be deleted path.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.DeleteFile(System.String)">
            <summary>
            Deletes remote file specified by path.
            </summary>
            <param name="path">File to be deleted path.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.RenameFile(System.String,System.String)">
            <summary>
            Renames remote file from old path to new path.
            </summary>
            <param name="oldPath">Path to the old file location.</param>
            <param name="newPath">Path to the new file location.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SymbolicLink(System.String,System.String)">
            <summary>
            Creates a symbolic link from old path to new path.
            </summary>
            <param name="path">The old path.</param>
            <param name="linkPath">The new path.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ListDirectory(System.String)">
            <summary>
            Retrieves list of files in remote directory.
            </summary>
            <param name="path">The path.</param>
            <returns>List of directory entries</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginListDirectory(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation of retrieving list of files in remote directory.
            </summary>
            <param name="path">The path.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.EndListDirectory(System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation of retrieving list of files in remote directory.
            </summary>
            <param name="asyncResult">The pending asynchronous SFTP request.</param>
            <returns>List of files</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Get(System.String)">
            <summary>
            Gets reference to remote file or directory.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.DownloadFile(System.String,System.IO.Stream)">
            <summary>
            Downloads remote file specified by the path into the stream.
            </summary>
            <param name="path">File to download.</param>
            <param name="output">Stream to write the file into.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginDownloadFile(System.String,System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous file downloading into the stream.
            </summary>
            <param name="path">The path.</param>
            <param name="output">The output.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.EndDownloadFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous file downloading into the stream.
            </summary>
            <param name="asyncResult">The pending asynchronous SFTP request.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.UploadFile(System.IO.Stream,System.String)">
            <summary>
            Uploads stream into remote file..
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.BeginUploadFile(System.IO.Stream,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous uploading the steam into remote file.
            </summary>
            <param name="input">Data input stream.</param>
            <param name="path">Remote file path.</param>
            <param name="asyncCallback">The method to be called when the asynchronous write operation is completed.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous operation.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.EndUploadFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous uploading the steam into remote file.
            </summary>
            <param name="asyncResult">The pending asynchronous SFTP request.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendAllText(System.String,System.String)">
            <summary>
             Opens a file, appends the specified string to the file, and then closes the file. 
             If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file.
            If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendText(System.String)">
            <summary>
            Creates a <see cref="T:System.IO.StreamWriter"/> that appends UTF-8 encoded text to an existing file.
            </summary>
            <param name="path">The path to the file to append to.</param>
            <returns>A StreamWriter that appends UTF-8 encoded text to an existing file.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.AppendText(System.String,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:System.IO.StreamWriter"/> that appends UTF-8 encoded text to an existing file.
            </summary>
            <param name="path">The path to the file to append to.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>
            A StreamWriter that appends UTF-8 encoded text to an existing file.
            </returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Create(System.String)">
            <summary>
            Creates or overwrites a file in the specified path.
            </summary>
            <param name="path">The path and name of the file to create.</param>
            <returns>A <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> that provides read/write access to the file specified in path</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Create(System.String,System.Int32)">
            <summary>
            Creates or overwrites the specified file.
            </summary>
            <param name="path">The path and name of the file to create.</param>
            <param name="bufferSize">The number of bytes buffered for reads and writes to the file.</param>
            <returns>A <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> that provides read/write access to the file specified in path</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.CreateText(System.String)">
            <summary>
            Creates or opens a file for writing UTF-8 encoded text.
            </summary>
            <param name="path">The file to be opened for writing.</param>
            <returns>A <see cref="T:System.IO.StreamWriter"/> that writes to the specified file using UTF-8 encoding.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.CreateText(System.String,System.Text.Encoding)">
            <summary>
            Creates or opens a file for writing UTF-8 encoded text.
            </summary>
            <param name="path">The file to be opened for writing.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns> A <see cref="T:System.IO.StreamWriter"/> that writes to the specified file using UTF-8 encoding. </returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Delete(System.String)">
            <summary>
            Deletes the specified file or directory. An exception is not thrown if the specified file does not exist.
            </summary>
            <param name="path">The name of the file or directory to be deleted. Wildcard characters are not supported.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Exists(System.String)">
            <summary>
            Determines whether the specified file exists.
            </summary>
            <param name="path">The file to check.</param>
            <returns><c>true</c> if path contains the name of an existing file; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetLastAccessTime(System.String)">
            <summary>
            Returns the date and time the specified file or directory was last accessed.
            </summary>
            <param name="path">The file or directory for which to obtain access date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in local time.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetLastAccessTimeUtc(System.String)">
            <summary>
            Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last accessed.
            </summary>
            <param name="path">The file or directory for which to obtain access date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in UTC time.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetLastWriteTime(System.String)">
            <summary>
            Returns the date and time the specified file or directory was last written to.
            </summary>
            <param name="path">The file or directory for which to obtain write date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last written to. This value is expressed in local time.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetLastWriteTimeUtc(System.String)">
            <summary>
            Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last written to.
            </summary>
            <param name="path">The file or directory for which to obtain write date and time information.</param>
            <returns>A <see cref="T:System.DateTime"/> structure set to the date and time that the specified file or directory was last written to. This value is expressed in UTC time.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Open(System.String,System.IO.FileMode)">
            <summary>
            Opens a <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> on the specified path with read/write access.
            </summary>
            <param name="path">The file to open.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.</param>
            <returns>An unshared <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> that provides access to the specified file, with the specified mode and access.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> on the specified path, with the specified mode and access.
            </summary>
            <param name="path">The file to open.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"/> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"/> value that specifies the operations that can be performed on the file.</param>
            <returns>An unshared <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> that provides access to the specified file, with the specified mode and access.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OpenRead(System.String)">
            <summary>
            Opens an existing file for reading.
            </summary>
            <param name="path">The file to be opened for reading.</param>
            <returns>A read-only System.IO.FileStream on the specified path.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OpenText(System.String)">
            <summary>
            Opens an existing UTF-8 encoded text file for reading.
            </summary>
            <param name="path">The file to be opened for reading.</param>
            <returns>A <see cref="T:System.IO.StreamReader"/> on the specified path.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OpenWrite(System.String)">
            <summary>
            Opens an existing file for writing.
            </summary>
            <param name="path">The file to be opened for writing.</param>
            <returns>An unshared <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> object on the specified path with <see cref="F:System.IO.FileAccess.Write"/> access.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllBytes(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A byte array containing the contents of the file.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllLines(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string array containing all lines of the file.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string array containing all lines of the file.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllText(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadLines(System.String)">
            <summary>
            Reads the lines of a file.
            </summary>
            <param name="path">The file to read.</param>
            <returns>The lines of the file.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.ReadLines(System.String,System.Text.Encoding)">
            <summary>
            Read the lines of a file that has a specified encoding.
            </summary>
            <param name="path">The file to read.</param>
            <param name="encoding">The encoding that is applied to the contents of the file.</param>
            <returns>The lines of the file.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetLastAccessTime(System.String,System.DateTime)">
            <summary>
            Sets the date and time the specified file was last accessed.
            </summary>
            <param name="path">The file for which to set the access date and time information.</param>
            <param name="lastAccessTime">A <see cref="T:System.DateTime"/> containing the value to set for the last access date and time of path. This value is expressed in local time.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetLastAccessTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the date and time, in coordinated universal time (UTC), that the specified file was last accessed.
            </summary>
            <param name="path">The file for which to set the access date and time information.</param>
            <param name="lastAccessTimeUtc">A <see cref="T:System.DateTime"/> containing the value to set for the last access date and time of path. This value is expressed in UTC time.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetLastWriteTime(System.String,System.DateTime)">
            <summary>
            Sets the date and time that the specified file was last written to.
            </summary>
            <param name="path">The file for which to set the date and time information.</param>
            <param name="lastWriteTime">A System.DateTime containing the value to set for the last write date and time of path. This value is expressed in local time.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetLastWriteTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the date and time, in coordinated universal time (UTC), that the specified file was last written to.
            </summary>
            <param name="path">The file for which to set the date and time information.</param>
            <param name="lastWriteTimeUtc">A System.DateTime containing the value to set for the last write date and time of path. This value is expressed in UTC time.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.String[])">
            <summary>
            Creates a new file, write the specified string array to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string array to write to the file.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string array to the file by using the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string array to write to the file.</param>
            <param name="encoding">An <see cref="T:System.Text.Encoding"/> object that represents the character encoding applied to the string array.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllText(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.GetAttributes(System.String)">
            <summary>
            Gets the <see cref="T:Renci.SshNet.Sftp.SftpFileAttributes"/> of the file on the path.
            </summary>
            <param name="path">The path to the file.</param>
            <returns>The <see cref="T:Renci.SshNet.Sftp.SftpFileAttributes"/> of the file on the path.</returns>
        </member>
        <member name="M:Renci.SshNet.SftpClient.SetAttributes(System.String,Renci.SshNet.Sftp.SftpFileAttributes)">
            <summary>
            Sets the specified <see cref="T:Renci.SshNet.Sftp.SftpFileAttributes"/> of the file on the specified path.
            </summary>
            <param name="path">The path to the file.</param>
            <param name="fileAttributes">The desired <see cref="T:Renci.SshNet.Sftp.SftpFileAttributes"/>.</param>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OnConnected">
            <summary>
            Called when client is connected to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SftpClient.OnDisconnecting">
            <summary>
            Called when client is disconnecting from the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SftpClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="P:Renci.SshNet.SftpClient.OperationTimeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
            <value>The operation timeout.</value>
        </member>
        <member name="P:Renci.SshNet.SftpClient.BufferSize">
            <summary>
            Gets or sets the size of the buffer.
            </summary>
            <value>The size of the buffer.</value>
        </member>
        <member name="P:Renci.SshNet.SftpClient.WorkingDirectory">
            <summary>
            Gets remote working directory.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SftpClient.ProtocolVersion">
            <summary>
            Gets sftp protocol version.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.SubsystemRequestInfo">
            <summary>
            Represents "subsystem" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SubsystemRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SubsystemRequestInfo"/> class.
            </summary>
            <param name="subsystem">The subsystem.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SubsystemRequestInfo.SubsystemName">
            <summary>
            Gets the name of the subsystem.
            </summary>
            <value>
            The name of the subsystem.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.InformationResponseMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_INFO_RESPONSE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationResponseMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.InformationResponseMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationResponseMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationResponseMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationResponseMessage.Responses">
            <summary>
            Gets authentication responses.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.InformationRequestMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_INFO_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.InformationRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Name">
            <summary>
            Gets information request name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Instruction">
            <summary>
            Gets information request instruction.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Language">
            <summary>
            Gets information request language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.InformationRequestMessage.Prompts">
            <summary>
            Gets information request prompts.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessageHost">
            <summary>
            Represents "hostbased" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageHost.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessageHost"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="publicKeyAlgorithm">The public key algorithm.</param>
            <param name="publicHostKey">The public host key.</param>
            <param name="clientHostName">Name of the client host.</param>
            <param name="clientUsername">The client username.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageHost.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.PublicKeyAlgorithm">
            <summary>
            Gets the public key algorithm for host key
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.PublicHostKey">
            <summary>
            Gets or sets the public host key and certificates for client host.
            </summary>
            <value>
            The public host key.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.ClientHostName">
            <summary>
            Gets or sets the name of the client host.
            </summary>
            <value>
            The name of the client host.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.ClientUsername">
            <summary>
            Gets or sets the client username on the client host
            </summary>
            <value>
            The client username.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageHost.Signature">
            <summary>
            Gets or sets the signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.CryptoPrivateKeyRsa">
            <summary>
            Represents RSA private key
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKeyRsa.Load(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Loads key specific data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKeyRsa.GetPublicKey">
            <summary>
            Gets the public key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKeyRsa.GetSignature(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Gets the signature.
            </summary>
            <param name="key">The key data bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPrivateKeyRsa.GetBytes">
            <summary>
            Gets key data byte array.
            </summary>
            <returns>
            The data byte array.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.CryptoPrivateKeyRsa.Name">
            <summary>
            Gets key name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.SshCommand">
            <summary>
            Represents SSH command that can be executed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SshCommand.#ctor(Renci.SshNet.Session,System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.SshCommand"/> class.
            </summary>
            <param name="session">The session.</param>
            <param name="commandText">The command text.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Renci.SshNet.SshCommand.BeginExecute(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous command execution.
            </summary>
            <param name="callback">An optional asynchronous callback, to be called when the command execution is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.</returns>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.BeginExecute(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous command execution.
            </summary>
            <param name="commandText">The command text.</param>
            <param name="callback">An optional asynchronous callback, to be called when the command execution is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>An <see cref="T:System.IAsyncResult"/> that represents the asynchronous command execution, which could still be pending.</returns>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.EndExecute(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous command execution to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Execute">
            <summary>
            Executes command specified by <see cref="P:Renci.SshNet.SshCommand.CommandText"/> property.
            </summary>
            <returns>Command execution result</returns>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Execute(System.String)">
            <summary>
            Executes the specified command text.
            </summary>
            <param name="commandText">The command text.</param>
            <returns>Command execution result</returns>
            <exception cref="T:Renci.SshNet.Common.SshConnectionException">Client is not connected.</exception>
            <exception cref="T:Renci.SshNet.Common.SshOperationTimeoutException">Operation has timed out.</exception>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.SshCommand.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.SshCommand"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SshCommand.CommandText">
            <summary>
            Gets the command text.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SshCommand.CommandTimeout">
            <summary>
            Gets or sets the command timeout.
            </summary>
            <value>
            The command timeout.
            </value>
        </member>
        <member name="P:Renci.SshNet.SshCommand.ExitStatus">
            <summary>
            Gets the command exit status.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SshCommand.OutputStream">
            <summary>
            Gets the output stream.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SshCommand.ExtendedOutputStream">
            <summary>
            Gets the extended output stream.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SshCommand.Result">
            <summary>
            Gets the command execution result.
            </summary>
        </member>
        <member name="P:Renci.SshNet.SshCommand.Error">
            <summary>
            Gets the command execution error.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.TransformMode">
            <summary>
            Specifies transformation modes
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.TransformMode.Encrypt">
            <summary>
            Specifies encryption mode
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.TransformMode.Decrypt">
            <summary>
            Specifies decryption mode
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Des">
            <summary>
            Represents the class for the DES algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Des.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Des"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Des.CreateDecryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric decryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Des.CreateEncryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric encryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Des.GenerateIV">
            <summary>
            Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Des.GenerateKey">
            <summary>
            Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherAESCTR">
            <summary>
            Represents base class for AES based encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAESCTR.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherAESCBC"/> class.
            </summary>
            <param name="keyBitsSize">Size of the key bits.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAESCTR.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Encrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAESCTR.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Decrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAESCTR.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAESCTR.KeySize">
            <summary>
            Gets or sets the key size, in bits, of the secret key used by the cipher.
            </summary>
            <value>
            The key size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAESCTR.BlockSize">
            <summary>
            Gets or sets the block size, in bits, of the cipher operation.
            </summary>
            <value>
            The block size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAESCTR.KeyBitsSize">
            <summary>
            Gets the size of the key bits.
            </summary>
            <value>
            The size of the key bits.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.CipherAES128CTR">
            <summary>
            Represents AES 128 bit encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAES128CTR.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherAES192CBC"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAES128CTR.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherAES192CTR">
            <summary>
            Represents AES 192 bit encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAES192CTR.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherAES192CBC"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAES192CTR.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherAES256CTR">
            <summary>
            Represents AES 256 bit encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherAES256CTR.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherAES192CBC"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherAES256CTR.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherBlowfish">
            <summary>
            Represents base class for AES based encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherBlowfish.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherBlowfish"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherBlowfish.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Encrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherBlowfish.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Decrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherBlowfish.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Security.CipherBlowfish.KeySize">
            <summary>
            Gets or sets the key size, in bits, of the secret key used by the cipher.
            </summary>
            <value>
            The key size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherBlowfish.BlockSize">
            <summary>
            Gets or sets the block size, in bits, of the cipher operation.
            </summary>
            <value>
            The block size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherBlowfish.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo">
            <summary>
            Represents "exit-signal" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.#ctor(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo"/> class.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <param name="coreDumped">if set to <c>true</c> then core is dumped.</param>
            <param name="errorMessage">The error message.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.SignalName">
            <summary>
            Gets the name of the signal.
            </summary>
            <value>
            The name of the signal.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.CoreDumped">
            <summary>
            Gets a value indicating whether core is dumped.
            </summary>
            <value>
              <c>true</c> if core is dumped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.ErrorMessage">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitSignalRequestInfo.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelDataMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_DATA message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="data">Message data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.SaveData">
            <summary>
            Saves the data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Data">
            <summary>
            Gets or sets message data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="T:Renci.SshNet.Compression.Compressor">
            <summary>
            Represents base class for compression algorithm implementation
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Init(Renci.SshNet.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Compress(System.Byte[])">
            <summary>
            Compresses the specified data.
            </summary>
            <param name="data">Data to compress.</param>
            <returns>Compressed data</returns>
        </member>
        <member name="M:Renci.SshNet.Compression.Compressor.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified data.
            </summary>
            <param name="data">Compressed data.</param>
            <returns>Decompressed data.</returns>
        </member>
        <member name="P:Renci.SshNet.Compression.Compressor.Session">
            <summary>
            Gets the session.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelDirectTcpip">
            <summary>
            Implements "direct-tcpip" SSH channel.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Channels.Channel">
            <summary>
            Represents base class for SSH channel implementations.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Channels.Channel"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Initialize(Renci.SshNet.Session,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes the channel.
            </summary>
            <param name="session">The session.</param>
            <param name="serverChannelNumber">The server channel number.</param>
            <param name="windowSize">Size of the window.</param>
            <param name="packetSize">Size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Close">
            <summary>
            Closes the channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnOpen(Renci.SshNet.Messages.Connection.ChannelOpenInfo)">
            <summary>
            Called when channel need to be open on the client.
            </summary>
            <param name="info">Channel open information.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnOpenFailure(System.UInt32,System.String,System.String)">
            <summary>
            Called when channel failed to open.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="description">The description.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnWindowAdjust(System.UInt32)">
            <summary>
            Called when channel window need to be adjust.
            </summary>
            <param name="bytesToAdd">The bytes to add.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnExtendedData(System.Byte[],System.UInt32)">
            <summary>
            Called when channel extended data is received.
            </summary>
            <param name="data">The data.</param>
            <param name="dataTypeCode">The data type code.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnEof">
            <summary>
            Called when channel has no more data to receive.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnClose">
            <summary>
            Called when channel is closed by the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnRequest(Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>
            Called when channel request received.
            </summary>
            <param name="info">Channel request information.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnSuccess">
            <summary>
            Called when channel request was successful
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.OnFailure">
            <summary>
            Called when channel request failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends SSH message to the server.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Connection.ChannelOpenMessage)">
            <summary>
            Send message to open a channel.
            </summary>
            <param name="message">Message to send</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Connection.ChannelCloseMessage)">
            <summary>
            Sends close channel message to the server
            </summary>
            <param name="message">Message to send.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Connection.ChannelDataMessage)">
            <summary>
            Sends channel data message to the servers.
            </summary>
            <remarks>This method takes care of managing the window size.</remarks>
            <param name="message">Channel data message.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.SendMessage(Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage)">
            <summary>
            Sends channel extended data message to the servers.
            </summary>
            <remarks>This method takes care of managing the window size.</remarks>
            <param name="message">Channel data message.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.WaitHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for the handle to be signaled or for an error to occurs.
            </summary>
            <param name="waitHandle">The wait handle.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.Channel.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Channels.Channel"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.LocalChannelNumber">
            <summary>
            Gets the local channel number.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.RemoteChannelNumber">
            <summary>
            Gets the remote channel number assigned by the server.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.LocalWindowSize">
            <summary>
            Gets the size of the local window.
            </summary>
            <value>
            The size of the local window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.ServerWindowSize">
            <summary>
            Gets or sets the size of the server window.
            </summary>
            <value>
            The size of the server window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.PacketSize">
            <summary>
            Gets the size of the packet.
            </summary>
            <value>
            The size of the packet.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.IsOpen">
            <summary>
            Gets a value indicating whether this channel is open.
            </summary>
            <value>
              <c>true</c> if this channel is open; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.OpenFailed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.DataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.ExtendedDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.EndOfData">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.Closed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.RequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.RequestSuccessed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Channels.Channel.RequestFailed">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> message received
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.IsConnected">
            <summary>
            Gets a value indicating whether the session is connected.
            </summary>
            <value>
            	<c>true</c> if the session is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.ConnectionInfo">
            <summary>
            Gets the connection info.
            </summary>
            <value>The connection info.</value>
        </member>
        <member name="P:Renci.SshNet.Channels.Channel.SessionSemaphore">
            <summary>
            Gets the session semaphore to control number of session channels
            </summary>
            <value>The session semaphore.</value>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Channels.ChannelDirectTcpip"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.Bind(System.String,System.UInt32,System.Net.Sockets.Socket)">
            <summary>
            Binds channel to specified remote host.
            </summary>
            <param name="remoteHost">The remote host.</param>
            <param name="port">The port.</param>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelDirectTcpip.OnEof">
            <summary>
            Called when channel has no more data to receive.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Channels.ChannelDirectTcpip.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.GetCanonicalPath(System.String)">
            <summary>
            Resolves path into absolute path on the server.
            </summary>
            <param name="path">Path to resolve.</param>
            <returns>Absolute path</returns>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpSession.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Sftp.SftpSession"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpSession.WorkingDirectory">
            <summary>
            Gets remote working directory.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpSession.ProtocolVersion">
            <summary>
            Gets SFTP protocol version.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpSession.NextRequestId">
            <summary>
            Gets the next request id for sftp session.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.CipherBase">
            <summary>
            Represents abstract class for all Block Cipher implementations.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.CipherBase"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.UInt32ToBigEndian(System.UInt32,System.Byte[])">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.UInt32ToBigEndian(System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.BigEndianToUInt32(System.Byte[])">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.BigEndianToUInt32(System.Byte[],System.Int32)">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.BigEndianToUInt64(System.Byte[])">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.BigEndianToUInt64(System.Byte[],System.Int32)">
            <summary>
            Converts big endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.UInt64ToBigEndian(System.UInt64,System.Byte[])">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.UInt64ToBigEndian(System.UInt64,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with big endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.UInt32ToLittleEndian(System.UInt32,System.Byte[])">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.UInt32ToLittleEndian(System.UInt32,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.LittleEndianToUInt32(System.Byte[])">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.LittleEndianToUInt32(System.Byte[],System.Int32)">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.LittleEndianToUInt64(System.Byte[])">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.LittleEndianToUInt64(System.Byte[],System.Int32)">
            <summary>
            Converts little endian bytes into number.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.UInt64ToLittleEndian(System.UInt64,System.Byte[])">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherBase.UInt64ToLittleEndian(System.UInt64,System.Byte[],System.Int32)">
            <summary>
            Populates buffer with little endian number representation.
            </summary>
            <param name="number">The number to convert.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The buffer offset.</param>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CipherBase.Key">
            <summary>
            Gets the cipher key.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CipherBase.IV">
            <summary>
            Gets the initialization vector.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CipherBase.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.BlowfishCipher.ProcessTable(System.UInt32,System.UInt32,System.UInt32[])">
            <summary>
            apply the encryption cycle to each value pair in the table.
            </summary>
            <param name="xl">The xl.</param>
            <param name="xr">The xr.</param>
            <param name="table">The table.</param>
        </member>
        <member name="T:Renci.SshNet.Messages.MessageAttribute">
            <summary>
            Indicates that a class represents SSH message. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.MessageAttribute.#ctor(System.String,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.MessageAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="number">The number.</param>
        </member>
        <member name="P:Renci.SshNet.Messages.MessageAttribute.Name">
            <summary>
            Gets or sets message name as defined in RFC 4250.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.MessageAttribute.Number">
            <summary>
            Gets or sets message number as defined in RFC 4250.
            </summary>
            <value>
            The number.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.SftpPermissionDeniedException">
            <summary>
            The exception that is thrown when operation permission is denied.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SshException">
            <summary>
            The exception that is thrown when SSH exception occurs.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is a null reference (Nothing in Visual Basic). </exception>
              
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter"/>
              </PermissionSet>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPermissionDeniedException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.IgnoreMessage">
            <summary>
            Represents SSH_MSG_IGNORE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.IgnoreMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.IgnoreMessage.Data">
            <summary>
            Gets ignore message data if any.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage">
            <summary>
            Represents SSH_MSG_SERVICE_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.#ctor(Renci.SshNet.Messages.ServiceName)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.ServiceRequestMessage.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.HMacMD5">
            <summary>
            Represents MD5 implementation of hashing algorithm
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.HMac">
            <summary>
            Represents base class for hash algorithm classes
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.HMac.Init(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Initializes algorithm with specified key.
            </summary>
            <param name="key">The hash key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.HMac.ComputeHash(System.Byte[])">
            <summary>
            Computes the hash value for the specified data.
            </summary>
            <param name="hashData">The input to compute the hash code for.</param>
            <returns>The hash</returns>
        </member>
        <member name="M:Renci.SshNet.Security.HMac.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.HMac.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Security.HMac.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Security.HMac"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.HMac.Hash">
            <summary>
            Instance of initialized hash algorithm that being used
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.HMac.HashSize">
            <summary>
            Gets the size, in bits, of the computed hash code.
            </summary>
            <value>
            The size of the hash.
            </value>
        </member>
        <member name="M:Renci.SshNet.Security.HMacMD5.Init(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Initializes algorithm with specified key.
            </summary>
            <param name="key">The hash key.</param>
        </member>
        <member name="P:Renci.SshNet.Security.HMacMD5.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.CtrMode">
            <summary>
            Represents the class for the CTR Block Cipher.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.ModeBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.ModeBase.#ctor(Renci.SshNet.Security.Cryptography.CipherBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.ModeBase"/> class.
            </summary>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.ModeBase.Cipher">
            <summary>
            Gets the cipher.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CtrMode.#ctor(Renci.SshNet.Security.Cryptography.CipherBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.CtrMode"/> class.
            </summary>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CtrMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CtrMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CtrMode.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo">
            <summary>
            Represents "x11-req" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.#ctor(System.Boolean,System.String,System.Byte[],System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo"/> class.
            </summary>
            <param name="isSingleConnection">if set to <c>true</c> it is a single connection.</param>
            <param name="protocol">The protocol.</param>
            <param name="cookie">The cookie.</param>
            <param name="screenNumber">The screen number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.IsSingleConnection">
            <summary>
            Gets or sets a value indicating whether it is a single connection.
            </summary>
            <value>
            	<c>true</c> if it is a single connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.AuthenticationProtocol">
            <summary>
            Gets or sets the authentication protocol.
            </summary>
            <value>
            The authentication protocol.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.AuthenticationCookie">
            <summary>
            Gets or sets the authentication cookie.
            </summary>
            <value>
            The authentication cookie.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.X11ForwardingRequestInfo.ScreenNumber">
            <summary>
            Gets or sets the screen number.
            </summary>
            <value>
            The screen number.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException">
            <summary>
            The exception that is thrown when pass phrase for key file is empty or null
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.PublicKeyMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_PK_OK message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PublicKeyMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.PublicKeyMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PublicKeyMessage.PublicKeyAlgorithmName">
            <summary>
            Gets the name of the public key algorithm.
            </summary>
            <value>
            The name of the public key algorithm.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.PublicKeyMessage.PublicKeyData">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage">
            <summary>
            Represents SSH_MSG_KEXDH_INIT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage.#ctor(System.Numerics.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage"/> class.
            </summary>
            <param name="clientExchangeValue">The client exchange value.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhInitMessage.E">
            <summary>
            Gets the E value.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CryptoPublicKeyDss">
            <summary>
            Represents DSS public key
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CryptoPublicKey">
            <summary>
            Represents base class for public keys
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKey.VerifySignature(System.Collections.Generic.IEnumerable{System.Byte},System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Verifies the signature.
            </summary>
            <param name="hash">The hash.</param>
            <param name="signature">The signature.</param>
            <returns>true if signature verified; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyDss.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CryptoPublicKeyDss"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyDss.#ctor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CryptoPublicKeyDss"/> class.
            </summary>
            <param name="p">The p value.</param>
            <param name="q">The q value.</param>
            <param name="g">The g value.</param>
            <param name="publicKey">The public key value.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyDss.Load(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Loads key specific data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyDss.VerifySignature(System.Collections.Generic.IEnumerable{System.Byte},System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Verifies the signature.
            </summary>
            <param name="hash">The hash.</param>
            <param name="signature">The signature.</param>
            <returns>
            true if signature verified; otherwise false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyDss.GetBytes">
            <summary>
            Gets key data byte array.
            </summary>
            <returns>
            The data byte array.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.CryptoPublicKeyDss.Name">
            <summary>
            Gets key name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest"/> class.
            </summary>
            <param name="minimum">The minimum.</param>
            <param name="preferred">The preferred.</param>
            <param name="maximum">The maximum.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.Minimum">
            <summary>
            Gets or sets the minimal size in bits of an acceptable group.
            </summary>
            <value>
            The minimum.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.Preferred">
            <summary>
            Gets or sets the preferred size in bits of the group the server will send.
            </summary>
            <value>
            The preferred.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeRequest.Maximum">
            <summary>
            Gets or sets the maximal size in bits of an acceptable group.
            </summary>
            <value>
            The maximum.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Aes">
            <summary>
            Represents the class for the AES algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Aes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Aes"/> class.
            </summary>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The implementation of the class derived from the symmetric algorithm is not valid.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Aes.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Aes"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Aes.CreateDecryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric decryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Aes.CreateEncryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric encryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Aes.GenerateIV">
            <summary>
            Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Aes.GenerateKey">
            <summary>
            Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.Aes.Mode">
            <summary>
            Gets or sets the mode for operation of the symmetric algorithm.
            </summary>
            <returns>The mode for operation of the symmetric algorithm. The default is <see cref="F:System.Security.Cryptography.CipherMode.CBC"/>.</returns>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The cipher mode is not one of the <see cref="T:System.Security.Cryptography.CipherMode"/> values. </exception>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.SignalRequestInfo">
            <summary>
            Represents "signal" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.SignalRequestInfo.NAME">
            <summary>
            Channel request name.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SignalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.SignalRequestInfo"/> class.
            </summary>
            <param name="signalName">Name of the signal.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.SignalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SignalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SignalRequestInfo.SignalName">
            <summary>
            Gets the name of the signal.
            </summary>
            <value>
            The name of the signal.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ShellRequestInfo">
            <summary>
            Represents "shell" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ShellRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ShellRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ShellRequestInfo"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ShellRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,Renci.SshNet.Messages.Connection.ChannelOpenInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> class.
            </summary>
            <param name="channelNumber">The channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.InitialWindowSize">
            <summary>
            Gets the initial size of the window.
            </summary>
            <value>
            The initial size of the window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.MaximumPacketSize">
            <summary>
            Gets the maximum size of the packet.
            </summary>
            <value>
            The maximum size of the packet.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.Info">
            <summary>
            Gets channel specific open information.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons">
            <summary>
            List channel open failure reasons defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.AdministativelyProhibited">
            <summary>
            SSH_OPEN_ADMINISTRATIVELY_PROHIBITED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.ConnectFailed">
            <summary>
            SSH_OPEN_CONNECT_FAILED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.UnknownChannelType">
            <summary>
            SSH_OPEN_UNKNOWN_CHANNEL_TYPE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ChannelOpenFailureReasons.ResourceShortage">
            <summary>
            SSH_OPEN_RESOURCE_SHORTAGE
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN_CONFIRMATION message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
            <param name="remoteChannelNumber">The remote channel number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.RemoteChannelNumber">
            <summary>
            Gets the remote channel number.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.InitialWindowSize">
            <summary>
            Gets the initial size of the window.
            </summary>
            <value>
            The initial size of the window.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.MaximumPacketSize">
            <summary>
            Gets the maximum size of the packet.
            </summary>
            <value>
            The maximum size of the packet.
            </value>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Init">
            <summary>
            SSH_FXP_INIT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Version">
            <summary>
            SSH_FXP_VERSION
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Open">
            <summary>
            SSH_FXP_OPEN
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Close">
            <summary>
            SSH_FXP_CLOSE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Read">
            <summary>
            SSH_FXP_READ
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Write">
            <summary>
            SSH_FXP_WRITE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.LStat">
            <summary>
            SSH_FXP_LSTAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.FStat">
            <summary>
            SSH_FXP_FSTAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.SetStat">
            <summary>
            SSH_FXP_SETSTAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.FSetStat">
            <summary>
            SSH_FXP_FSETSTAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.OpenDir">
            <summary>
            SSH_FXP_OPENDIR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.ReadDir">
            <summary>
            SSH_FXP_READDIR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Remove">
            <summary>
            SSH_FXP_REMOVE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.MkDir">
            <summary>
            SSH_FXP_MKDIR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.RmDir">
            <summary>
            SSH_FXP_RMDIR
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.RealPath">
            <summary>
            SSH_FXP_REALPATH
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Stat">
            <summary>
            SSH_FXP_STAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Rename">
            <summary>
            SSH_FXP_RENAME
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.ReadLink">
            <summary>
            SSH_FXP_READLINK
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.SymLink">
            <summary>
            SSH_FXP_SYMLINK
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Status">
            <summary>
            SSH_FXP_STATUS
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Handle">
            <summary>
            SSH_FXP_HANDLE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Data">
            <summary>
            SSH_FXP_DATA
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Name">
            <summary>
            SSH_FXP_NAME
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Attrs">
            <summary>
            SSH_FXP_ATTRS
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.Extended">
            <summary>
            SSH_FXP_EXTENDED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.SftpMessageTypes.ExtendedReply">
            <summary>
            SSH_FXP_EXTENDED_REPLY
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.GlobalRequestName">
            <summary>
            Specifies supported request names.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.GlobalRequestName.TcpIpForward">
            <summary>
            tcpip-forward
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.GlobalRequestName.CancelTcpIpForward">
            <summary>
            cancel-tcpip-forward
            </summary>
        </member>
        <member name="T:Renci.SshNet.ForwardedPortLocal">
            <summary>
            Provides functionality for local port forwarding
            </summary>
        </member>
        <member name="T:Renci.SshNet.ForwardedPort">
            <summary>
            Base class for port forwarding functionality.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.#ctor">
            <summary>
            Initializes a new instance of the <see cref="P:Renci.SshNet.ForwardedPort.Port"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Start">
            <summary>
            Starts port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Stop">
            <summary>
            Stops port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.RaiseExceptionEvent(System.Exception)">
            <summary>
            Raises <see cref="E:Renci.SshNet.ForwardedPort.Exception"/> event.
            </summary>
            <param name="execption">The exception.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.RaiseRequestReceived(System.String,System.UInt32)">
            <summary>
            Raises <see cref="E:Renci.SshNet.ForwardedPort.RequestReceived"/> event.
            </summary>
            <param name="host">Request originator host.</param>
            <param name="port">Request originator port.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPort.Session_ErrorOccured(System.Object,System.IO.ErrorEventArgs)">
            <summary>
            Handles session ErrorOccured event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.IO.ErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.Session">
            <summary>
            Gets or sets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.BoundHost">
            <summary>
            Gets the bound host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.Host">
            <summary>
            Gets the forwarded host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.Port">
            <summary>
            Gets the forwarded port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.ForwardedPort.IsStarted">
            <summary>
            Gets or sets a value indicating whether port forwarding started.
            </summary>
            <value>
            	<c>true</c> if port forwarding started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Renci.SshNet.ForwardedPort.Exception">
            <summary>
            Occurs when exception is thrown.
            </summary>
        </member>
        <member name="E:Renci.SshNet.ForwardedPort.RequestReceived">
            <summary>
            Occurs when port forwarding request received.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Start">
            <summary>
            Starts local port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Stop">
            <summary>
            Stops local port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortLocal.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Channels.Channel"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelSession">
            <summary>
            Implements "forwarded-tcpip" SSH channel.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelSession._failedOpenAttempts">
            <summary>
            Counts faile channel open attempts
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelSession._channelOpenResponseWaitHandle">
            <summary>
            Wait handle to signal when response was received to open the channel
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.Open">
            <summary>
            Opens the channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnOpenConfirmation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Called when channel is opened by the server.
            </summary>
            <param name="remoteChannelNumber">The remote channel number.</param>
            <param name="initialWindowSize">Initial size of the window.</param>
            <param name="maximumPacketSize">Maximum size of the packet.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnOpenFailure(System.UInt32,System.String,System.String)">
            <summary>
            Called when channel failed to open.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="description">The description.</param>
            <param name="language">The language.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnClose">
            <summary>
            Called when channel is closed by the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendPseudoTerminalRequest(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.String)">
            <summary>
            Sends the pseudo terminal request.
            </summary>
            <param name="environmentVariable">The environment variable.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalMode">The terminal mode.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendX11ForwardingRequest(System.Boolean,System.String,System.Byte[],System.UInt32)">
            <summary>
            Sends the X11 forwarding request.
            </summary>
            <param name="isSingleConnection">if set to <c>true</c> the it is single connection.</param>
            <param name="protocol">The protocol.</param>
            <param name="cookie">The cookie.</param>
            <param name="screenNumber">The screen number.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendEnvironmentVariableRequest(System.String,System.String)">
            <summary>
            Sends the environment variable request.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="variableValue">The variable value.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendShellRequest">
            <summary>
            Sends the shell request.
            </summary>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendExecRequest(System.String)">
            <summary>
            Sends the exec request.
            </summary>
            <param name="command">The command.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendSubsystemRequest(System.String)">
            <summary>
            Sends the subsystem request.
            </summary>
            <param name="subsystem">The subsystem.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendWindowChangeRequest(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Sends the window change request.
            </summary>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendLocalFlowRequest(System.Boolean)">
            <summary>
            Sends the local flow request.
            </summary>
            <param name="clientCanDo">if set to <c>true</c> [client can do].</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendSignalRequest(System.String)">
            <summary>
            Sends the signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendExitStatusRequest(System.UInt32)">
            <summary>
            Sends the exit status request.
            </summary>
            <param name="exitStatus">The exit status.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendExitSignalRequest(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Sends the exit signal request.
            </summary>
            <param name="signalName">Name of the signal.</param>
            <param name="coreDumped">if set to <c>true</c> [core dumped].</param>
            <param name="errorMessage">The error message.</param>
            <param name="language">The language.</param>
            <returns>true if request was successful; otherwise false.</returns>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnSuccess">
            <summary>
            Called when channel request was successful
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.OnFailure">
            <summary>
            Called when channel request failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.SendChannelOpenMessage">
            <summary>
            Sends the channel open message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelSession.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Channels.ChannelSession.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup14Sha1">
            <summary>
            Represents "diffie-hellman-group14-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup14Sha1.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>
            Key exchange hash.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup14Sha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup14Sha1.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup14Sha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.DesCipher">
            <summary>
            Represents the class for the DES algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DesCipher.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.DesCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DesCipher.GenerateWorkingKey(System.Boolean,System.Byte[])">
            <summary>
            Generates the working key.
            </summary>
            <param name="encrypting">if set to <c>true</c> [encrypting].</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.DesCipher.DesFunc(System.Int32[],System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Perfoms DES function.
            </summary>
            <param name="wKey">The w key.</param>
            <param name="input">The input.</param>
            <param name="inOff">The in off.</param>
            <param name="outBytes">The out bytes.</param>
            <param name="outOff">The out off.</param>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.DesCipher.EncryptionKey">
            <summary>
            Gets the encryption key.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.DesCipher.DecryptionKey">
            <summary>
            Gets the decryption key.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.DesCipher.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.CipherTransform">
            <summary>
            
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherTransform.#ctor(Renci.SshNet.Security.Cryptography.TransformMode,Renci.SshNet.Security.Cryptography.CipherBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.CipherTransform"/> class.
            </summary>
            <param name="transformMode">The transform mode.</param>
            <param name="blockCipher">The block cipher.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CipherTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Transforms the specified region of the input byte array and copies the resulting transform to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write the transform.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes written.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CipherTransform.TransformMode">
            <summary>
            Gets the transform mode.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CipherTransform.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
            <returns>true if the current transform can be reused; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CipherTransform.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
            <returns>true if multiple blocks can be transformed; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CipherTransform.InputBlockSize">
            <summary>
            Gets the input block size.
            </summary>
            <returns>The size of the input data blocks in bytes.</returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CipherTransform.OutputBlockSize">
            <summary>
            Gets the output block size.
            </summary>
            <returns>The size of the output data blocks in bytes.</returns>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.CfbMode">
            <summary>
            Represents the class for the CFB Block Cipher.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CfbMode.#ctor(Renci.SshNet.Security.Cryptography.CipherBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.CfbMode"/> class.
            </summary>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CfbMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CfbMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CfbMode.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Cast">
            <summary>
            Represents the class for the CAST algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cast.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Cast"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cast.CreateDecryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric decryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cast.CreateEncryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric encryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cast.GenerateIV">
            <summary>
            Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Cast.GenerateKey">
            <summary>
            Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherSerpentCBC">
            <summary>
            Represents base class for Serpent based encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherSerpentCBC.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherSerpentCBC"/> class.
            </summary>
            <param name="keyBitsSize">Size of the key bits.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CipherSerpentCBC.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Encrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherSerpentCBC.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Decrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherSerpentCBC.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Security.CipherSerpentCBC.KeySize">
            <summary>
            Gets or sets the key size, in bits, of the secret key used by the cipher.
            </summary>
            <value>
            The key size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherSerpentCBC.BlockSize">
            <summary>
            Gets or sets the block size, in bits, of the cipher operation.
            </summary>
            <value>
            The block size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherSerpentCBC.KeyBitsSize">
            <summary>
            Gets the size of the key bits.
            </summary>
            <value>
            The size of the key bits.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.CipherSerpent128CBC">
            <summary>
            Represents Serpent 128 bit encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherSerpent128CBC.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherSerpent128CBC"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherSerpent128CBC.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherSerpent192CBC">
            <summary>
            Represents Serpent 192 bit encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherSerpent192CBC.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherSerpent192CBC"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherSerpent192CBC.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherSerpent256CBC">
            <summary>
            Represents Serpent 256 bit encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherSerpent256CBC.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherSerpent256CBC"/> class.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherSerpent256CBC.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ExecRequestInfo">
            <summary>
            Represents "exec" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ExecRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExecRequestInfo"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExecRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExecRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExecRequestInfo.Command">
            <summary>
            Gets command to execute.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo">
            <summary>
            Used to open "session" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.SessionChannelOpenInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo">
            <summary>
            Used to open "forwarded-tcpip" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.ConnectedAddress">
            <summary>
            Gets the connected address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.ConnectedPort">
            <summary>
            Gets the connected port.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ForwardedTcpipChannelInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_EXTENDED_DATA message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.LoadData">
            <summary>
            Loads the data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.SaveData">
            <summary>
            Saves the data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.DataTypeCode">
            <summary>
            Gets message data type code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.Data">
            <summary>
            Gets message data.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherTripleDES">
            <summary>
            Represents Triple DES encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherTripleDES.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherTripleDES"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherTripleDES.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Encrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherTripleDES.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Decrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherTripleDES.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Security.CipherTripleDES.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherTripleDES.KeySize">
            <summary>
            Gets or sets the key size, in bits, of the secret key used by the cipher.
            </summary>
            <value>
            The key size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherTripleDES.BlockSize">
            <summary>
            Gets or sets the block size, in bits, of the cipher operation.
            </summary>
            <value>
            The block size, in bits.
            </value>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.P_00">
            Define the fixed p0/p1 permutations used in keyed S-box lookup.
            By changing the following constant definitions, the S-boxes will
            automatically Get changed in the Twofish engine.
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.gSubKeys">
            gSubKeys[] and gSBox[] are eventually used in the
            encryption and decryption methods.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.RS_MDS_Encode(System.Int32,System.Int32)">
             Use (12, 8) Reed-Solomon code over GF(256) to produce
             a key S-box 32-bit entity from 2 key material 32-bit
             entities.
            
             @param    k0 first 32-bit entity
             @param    k1 second 32-bit entity
             @return     Remainder polynomial Generated using RS code
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.RS_rem(System.Int32)">
                    * Reed-Solomon code parameters: (12,8) reversible code:
            		* <p>
                    * <pre>
                    * G(x) = x^4 + (a+1/a)x^3 + ax^2 + (a+1/a)x + 1
                    * </pre>
                    * where a = primitive root of field generator 0x14D
            		* </p>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.Blowfish">
            <summary>
            Represents the class for the Blowfish algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Blowfish.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Blowfish"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Blowfish.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.Blowfish"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Blowfish.CreateDecryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric decryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Blowfish.CreateEncryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric encryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Blowfish.GenerateIV">
            <summary>
            Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.Blowfish.GenerateKey">
            <summary>
            Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive">
            <summary>
            Represents "keyboard-interactive" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessageKeyboardInteractive.SubMethods">
            <summary>
            Gets authentication sub methods.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SftpPathNotFoundException">
            <summary>
            The exception that is thrown when file or directory is not found.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SftpPathNotFoundException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Renci.SshNet.Common.PipeStream">
            <summary>
            PipeStream is a thread-safe read/write data stream for use between two threads in a 
            single-producer/single-consumer type problem.
            </summary>
            <version>2006/10/13 1.0</version>
            <remarks>Update on 2008/10/9 1.1 - uses Monitor instead of Manual Reset events for more elegant synchronicity.</remarks>
            <license>
            Copyright (c) 2006 James Kolpack (james dot kolpack at google mail)
            
            Permission is hereby granted, free of charge, to any person obtaining a copy of this software and 
            associated documentation files (the "Software"), to deal in the Software without restriction, 
            including without limitation the rights to use, copy, modify, merge, publish, distribute, 
            sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is 
            furnished to do so, subject to the following conditions:
            
            The above copyright notice and this permission notice shall be included in all copies or 
            substantial portions of the Software.
            
            THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
            INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
            PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE 
            LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT 
            OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
            OTHER DEALINGS IN THE SOFTWARE.
            </license>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._buffer">
            <summary>
            Queue of bytes provides the datastructure for transmitting from an
            input stream to an output stream.
            </summary>
            <remarks>Possible more effecient ways to accomplish this.</remarks>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._isFlushed">
            <summary>
            Indicates that the input stream has been flushed and that
            all remaining data should be written to the output stream.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._maxBufferLength">
            <summary>
            Maximum number of bytes to store in the buffer.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Common.PipeStream._canBlockLastRead">
            <summary>
            Setting this to true will cause Read() to block if it appears
            that it will run out of data.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <returns>
            The new position within the current stream.
            </returns>
            <param name="offset">A byte offset relative to the origin parameter. </param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"></see> indicating the reference point used to obtain the new position. </param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes. </param>
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream. </param>
            <param name="count">The maximum number of bytes to be read from the current stream. </param>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source. </param>
            <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.ReadAvailable(System.Int32)">
            <summary>
            Returns true if there are 
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Common.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream. </param>
            <param name="count">The number of bytes to be written to the current stream. </param>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream. </param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.MaxBufferLength">
            <summary>
            Gets or sets the maximum number of bytes to store in the buffer.
            </summary>
            <value>The length of the max buffer.</value>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.BlockLastReadBuffer">
            <summary>
            Gets or sets a value indicating whether to block last read method before the buffer is empty.
            When true, Read() will block until it can fill the passed in buffer and count.
            When false, Read() will not block, returning all the available buffer data.
            </summary>
            <remarks>
            Setting to true will remove the possibility of ending a stream reader prematurely.
            </remarks>
            <value>
            	<c>true</c> if block last read method before the buffer is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>
            true if the stream supports reading; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>
            true if the stream supports seeking; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>
            true if the stream supports writing; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
            
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="P:Renci.SshNet.Common.PipeStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><filterpriority>1</filterpriority>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationEventArgs">
            <summary>
            Base class for authentication events.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationEventArgs.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.DisconnectMessage">
            <summary>
            Represents SSH_MSG_DISCONNECT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor(Renci.SshNet.Messages.Transport.DisconnectReason,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> class.
            </summary>
            <param name="reasonCode">The reason code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DisconnectMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.ReasonCode">
            <summary>
            Gets disconnect reason code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Description">
            <summary>
            Gets disconnect description.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.RequestFailureMessage">
            <summary>
            Represents SSH_MSG_REQUEST_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelTypes">
            <summary>
            Lists channel types as defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.Session">
            <summary>
            session
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.X11">
            <summary>
            x11
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.ForwardedTcpip">
            <summary>
            forwarded-tcpip
            </summary>
        </member>
        <member name="F:Renci.SshNet.Channels.ChannelTypes.DirectTcpip">
            <summary>
            direct-tcpip
            </summary>
        </member>
        <member name="T:Renci.SshNet.Channels.ChannelForwardedTcpip">
            <summary>
            Implements "forwarded-tcpip" SSH channel.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Channels.ChannelForwardedTcpip"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.Bind(System.String,System.UInt32)">
            <summary>
            Binds channel to specified connected host.
            </summary>
            <param name="connectedHost">The connected host.</param>
            <param name="connectedPort">The connected port.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.OnData(System.Byte[])">
            <summary>
            Called when channel data is received.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Channels.ChannelForwardedTcpip.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Channels.ChannelForwardedTcpip.ChannelType">
            <summary>
            Gets the type of the channel.
            </summary>
            <value>
            The type of the channel.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256">
            <summary>
            Represents "diffie-hellman-group-exchange-sha256" algorithm implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>
            Key exchange hash.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Hash(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Hashes the specified data bytes.
            </summary>
            <param name="hashBytes">Data to hash.</param>
            <returns>
            Hashed bytes
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.PrivateKeyConnectionInfo">
            <summary>
            Provides connection information when private key authentication method is used
            </summary>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
            <param name="keyFiles">Connection key files.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
            <param name="keyFiles">Connection key files.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.OnAuthenticate">
            <summary>
            Called when connection needs to be authenticated.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.Session_UserAuthenticationSuccessMessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.SuccessMessage})">
            <summary>
            Handles the UserAuthenticationSuccessMessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.Session_UserAuthenticationFailureReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.FailureMessage})">
            <summary>
            Handles the UserAuthenticationFailureReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.Session_MessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Message})">
            <summary>
            Handles the MessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PrivateKeyConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.PrivateKeyConnectionInfo.Name">
            <summary>
            Gets connection name
            </summary>
        </member>
        <member name="P:Renci.SshNet.PrivateKeyConnectionInfo.KeyFiles">
            <summary>
            Gets the key files used for authentication.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.TripleDes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.TripleDes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.TripleDes"/> class.
            </summary>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The implementation of the class derived from the symmetric algorithm is not valid.</exception>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.TripleDes.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.TripleDes"/> class.
            </summary>
            <param name="keySize">Size of the key.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.TripleDes.CreateDecryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric decryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.TripleDes.CreateEncryptor(System.Byte[],System.Byte[])">
            <summary>
            Creates a symmetric encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>).
            </summary>
            <param name="rgbKey">The secret key to use for the symmetric algorithm.</param>
            <param name="rgbIV">The initialization vector to use for the symmetric algorithm.</param>
            <returns>
            A symmetric encryptor object.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.TripleDes.GenerateIV">
            <summary>
            Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.TripleDes.GenerateKey">
            <summary>
            Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key"/>) to use for the algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.AesCipher.GenerateWorkingKey(System.Boolean,System.Byte[])">
            Calculate the necessary round keys
            The number of calculations depends on key size and block size
            AES specified a fixed block size of 128 bits and key sizes 128/192/256 bits
            This code is written assuming those are the only possible values
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.AesCipher.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelEventArgs">
            <summary>
            Base class for all channel related events.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelEventArgs.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelEventArgs"/> class.
            </summary>
            <param name="channelNumber">The channel number.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelEventArgs.ChannelNumber">
            <summary>
            Gets the channel number.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage">
            <summary>
            Represents SSH_MSG_KEXINIT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.Cookie">
            <summary>
            Gets session cookie.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.KeyExchangeAlgorithms">
            <summary>
            Gets or sets supported key exchange algorithms.
            </summary>
            <value>
            Supported key exchange algorithms.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.ServerHostKeyAlgorithms">
            <summary>
            Gets or sets supported server host key algorithms.
            </summary>
            <value>
            Supported server host key algorithms.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsClientToServer">
            <summary>
            Gets or sets supported encryption algorithms client to server.
            </summary>
            <value>
            Supported encryption algorithms client to server.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsServerToClient">
            <summary>
            Gets or sets supported encryption algorithms server to client.
            </summary>
            <value>
            Supported encryption algorithms server to client.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsClientToServer">
            <summary>
            Gets or sets supported hash algorithms client to server.
            </summary>
            <value>
            Supported hash algorithms client to server.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsServerToClient">
            <summary>
            Gets or sets supported hash algorithms server to client.
            </summary>
            <value>
            Supported hash algorithms server to client.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsClientToServer">
            <summary>
            Gets or sets supported compression algorithms client to server.
            </summary>
            <value>
            Supported compression algorithms client to server.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsServerToClient">
            <summary>
            Gets or sets supported compression algorithms server to client.
            </summary>
            <value>
            Supported compression algorithms server to client.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LanguagesClientToServer">
            <summary>
            Gets or sets supported languages client to server.
            </summary>
            <value>
            Supported languages client to server.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LanguagesServerToClient">
            <summary>
            Gets or sets supported languages server to client.
            </summary>
            <value>
            The languages server to client.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.FirstKexPacketFollows">
            <summary>
            Gets or sets a value indicating whether first key exchange packet follows.
            </summary>
            <value>
            	<c>true</c> if first key exchange packet follows; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.Reserved">
            <summary>
            Gets or sets the reserved value.
            </summary>
            <value>
            The reserved value.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Security.CryptoPublicKeyRsa">
            <summary>
            Represents RSA public key
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyRsa.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CryptoPublicKeyRsa"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyRsa.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CryptoPublicKeyRsa"/> class.
            </summary>
            <param name="modulus">The modulus.</param>
            <param name="exponent">The exponent.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyRsa.Load(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Loads key specific data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyRsa.VerifySignature(System.Collections.Generic.IEnumerable{System.Byte},System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Verifies the signature.
            </summary>
            <param name="hash">The hash.</param>
            <param name="signature">The signature.</param>
            <returns>
            true if signature verified; otherwise false.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CryptoPublicKeyRsa.GetBytes">
            <summary>
            Gets key data byte array.
            </summary>
            <returns>
            The data byte array.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.CryptoPublicKeyRsa.Name">
            <summary>
            Gets key name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.Zlib">
            <summary>
            Represents "zlib" compression implementation
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.Zlib.Init(Renci.SshNet.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Renci.SshNet.Compression.Zlib.Compress(System.Byte[])">
            <summary>
            Compresses the specified data.
            </summary>
            <param name="data">Data to compress.</param>
            <returns>
            Compressed data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Compression.Zlib.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified data.
            </summary>
            <param name="data">Compressed data.</param>
            <returns>
            Decompressed data.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Compression.Zlib.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.HMacSha1">
            <summary>
            Represents SHA1 implementation of hashing algorithm
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.HMacSha1.Init(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Initializes algorithm with specified key.
            </summary>
            <param name="key">The hash key.</param>
        </member>
        <member name="P:Renci.SshNet.Security.HMacSha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_INIT message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.#ctor(System.Numerics.BigInteger)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit"/> class.
            </summary>
            <param name="clientExchangeValue">The client exchange value.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeInit.E">
            <summary>
            Gets the E value.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.CbcMode">
            <summary>
            Represents the class for the CBC Block Cipher.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CbcMode.#ctor(Renci.SshNet.Security.Cryptography.CipherBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.CbcMode"/> class.
            </summary>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CbcMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CbcMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.CbcMode.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CastCipher.F1(System.UInt32,System.UInt32,System.Int32)">
             The first of the three processing functions for the
             encryption and decryption.
            
             @param D            the input to be processed
             @param Kmi        the mask to be used from Km[n]
             @param Kri        the rotation value to be used
            
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CastCipher.F2(System.UInt32,System.UInt32,System.Int32)">
             The second of the three processing functions for the
             encryption and decryption.
            
             @param D            the input to be processed
             @param Kmi        the mask to be used from Km[n]
             @param Kri        the rotation value to be used
            
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CastCipher.F3(System.UInt32,System.UInt32,System.Int32)">
             The third of the three processing functions for the
             encryption and decryption.
            
             @param D            the input to be processed
             @param Kmi        the mask to be used from Km[n]
             @param Kri        the rotation value to be used
            
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.CastCipher.CAST_Encipher(System.UInt32,System.UInt32,System.UInt32[])">
             Does the 16 rounds to encrypt the block.
            
             @param L0    the LH-32bits of the plaintext block
             @param R0    the RH-32bits of the plaintext block
        </member>
        <member name="T:Renci.SshNet.Security.CipherCast">
            <summary>
            Represents base class for AES based encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherCast.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherAESCBC"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherCast.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Encrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherCast.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Decrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherCast.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Security.CipherCast.KeySize">
            <summary>
            Gets or sets the key size, in bits, of the secret key used by the cipher.
            </summary>
            <value>
            The key size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherCast.BlockSize">
            <summary>
            Gets or sets the block size, in bits, of the cipher operation.
            </summary>
            <value>
            The block size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherCast.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationPrompt">
            <summary>
            Provides prompt information when <see cref="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt"/> is raised
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationPrompt.#ctor(System.Int32,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationPrompt"/> class.
            </summary>
            <param name="id">The sequence id.</param>
            <param name="isEchoed">if set to <c>true</c> the user input should be echoed.</param>
            <param name="request">The request.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.Id">
            <summary>
            Gets the prompt sequence id.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.IsEchoed">
            <summary>
            Gets or sets a value indicating whether the user input should be echoed as characters are typed.
            </summary>
            <value>
              <c>true</c> if the user input should be echoed as characters are typed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.Request">
            <summary>
            Gets server information request.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPrompt.Response">
            <summary>
            Gets or sets server information response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationPromptEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationPromptEventArgs.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Renci.SshNet.Common.AuthenticationPrompt})">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationPromptEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="instruction">The instruction.</param>
            <param name="language">The language.</param>
            <param name="prompts">The information request prompts.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Language">
            <summary>
            Gets prompt language.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Instruction">
            <summary>
            Gets prompt instruction.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Prompts">
            <summary>
            Gets server information request prompts.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.FailureMessage">
            <summary>
            Represents SSH_MSG_USERAUTH_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.FailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.FailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.FailureMessage.AllowedAuthentications">
            <summary>
            Gets or sets the allowed authentications if available.
            </summary>
            <value>
            The allowed authentications.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.FailureMessage.Message">
            <summary>
            Gets failure message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.FailureMessage.PartialSuccess">
            <summary>
            Gets a value indicating whether authentication is partially successful.
            </summary>
            <value>
              <c>true</c> if partially successful; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor(System.UInt32,Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> class.
            </summary>
            <param name="localChannelName">Name of the local channel.</param>
            <param name="info">The info.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.WantReply">
            <summary>
            Gets a value indicating whether the reply is needed.
            </summary>
            <value>
              <c>true</c> if reply is needed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.Info">
            <summary>
            Gets channel request information.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_OPEN_FAILURE message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor(System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
            <param name="description">The description.</param>
            <param name="reasonCode">The reason code.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.ReasonCode">
            <summary>
            Gets failure reason code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Description">
            <summary>
            Gets description for failure.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.NoneConnectionInfo">
            <summary>
            Provides connection information when password authentication method is used
            </summary>
        </member>
        <member name="M:Renci.SshNet.NoneConnectionInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="username">Connection username.</param>
        </member>
        <member name="M:Renci.SshNet.NoneConnectionInfo.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> class.
            </summary>
            <param name="host">Connection host.</param>
            <param name="port">Connection port.</param>
            <param name="username">Connection username.</param>
        </member>
        <member name="M:Renci.SshNet.NoneConnectionInfo.OnAuthenticate">
            <summary>
            Called when connection needs to be authenticated.
            </summary>
        </member>
        <member name="M:Renci.SshNet.NoneConnectionInfo.Session_UserAuthenticationSuccessMessageReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.SuccessMessage})">
            <summary>
            Handles the UserAuthenticationSuccessMessageReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.NoneConnectionInfo.Session_UserAuthenticationFailureReceived(System.Object,Renci.SshNet.MessageEventArgs{Renci.SshNet.Messages.Authentication.FailureMessage})">
            <summary>
            Handles the UserAuthenticationFailureReceived event of the session.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Renci.SshNet.NoneConnectionInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.NoneConnectionInfo.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.NoneConnectionInfo.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.PasswordConnectionInfo"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.NoneConnectionInfo.AllowedAuthentications">
            <summary>
            Gets list of allowed authentications.
            </summary>
        </member>
        <member name="P:Renci.SshNet.NoneConnectionInfo.Name">
            <summary>
            Gets connection name
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SshOperationTimeoutException">
            <summary>
            The exception that is thrown when operation is timed out.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshOperationTimeoutException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Renci.SshNet.Common.SshAuthenticationException">
            <summary>
            The exception that is thrown when authentication failed.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshAuthenticationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Renci.SshNet.Session">
            <summary>
            Provides functionality to connect and interact with SSH server.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session.MAXIMUM_PACKET_SIZE">
            <summary>
            Specifies maximum packet size defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session.MAXIMUM_PAYLOAD_SIZE">
            <summary>
            Specifies maximum payload size defined by the protocol.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._authenticationConnection">
            <summary>
            Controls how many authentication attempts can take place at the same time.
            </summary>
            <remarks>
            Some server may restrict number to prevent authentication attacks
            </remarks>
        </member>
        <member name="F:Renci.SshNet.Session._messagesMetadata">
            <summary>
            Holds metada about session messages
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._socket">
            <summary>
            Holds connection socket.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._messageListener">
            <summary>
            Holds reference to task that listens for incoming messages
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._outboundPacketSequence">
            <summary>
            Specifies outbound packet number
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._inboundPacketSequence">
            <summary>
            Specifies incoming packet number
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._serviceAccepted">
            <summary>
            WaitHandle to signal that last service request was accepted
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._exceptionWaitHandle">
            <summary>
            WaitHandle to signal that exception was thrown by another thread.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._keyExchangeCompletedWaitHandle">
            <summary>
            WaitHandle to signal that key exchange was completed.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._exception">
            <summary>
            Exception that need to be thrown by waiting thread
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._isAuthenticated">
            <summary>
            Specifies whether connection is authenticated
            </summary>
        </member>
        <member name="F:Renci.SshNet.Session._isDisconnecting">
            <summary>
            Specifies whether user issued Disconnect command or not
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.#ctor(Renci.SshNet.ConnectionInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Session"/> class.
            </summary>
            <param name="connectionInfo">The connection info.</param>
        </member>
        <member name="M:Renci.SshNet.Session.Connect">
            <summary>
            Connects to the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.Disconnect">
            <summary>
            Disconnects from the server
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.SendKeepAlive">
            <summary>
            Sends "keep alive" message to keep connection alive.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.WaitHandle(System.Threading.WaitHandle)">
            <summary>
            Waits for handle to signal while checking other handles as well including timeout check to prevent waiting for ever
            </summary>
            <param name="waitHandle">The wait handle.</param>
        </member>
        <member name="M:Renci.SshNet.Session.SendMessage(Renci.SshNet.Messages.Message)">
            <summary>
            Sends packet message to the server.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.ReceiveMessage">
            <summary>
            Receives the message from the server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Session.HandleMessage``1(``0)">
            <summary>
            Handles the message.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnDisconnectReceived(Renci.SshNet.Messages.Transport.DisconnectMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnIgnoreReceived(Renci.SshNet.Messages.Transport.IgnoreMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUnimplementedReceived(Renci.SshNet.Messages.Transport.UnimplementedMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.UnimplementedMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.UnimplementedMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnDebugReceived(Renci.SshNet.Messages.Transport.DebugMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.DebugMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.DebugMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnServiceRequestReceived(Renci.SshNet.Messages.Transport.ServiceRequestMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnServiceAcceptReceived(Renci.SshNet.Messages.Transport.ServiceAcceptMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnKeyExchangeInitReceived(Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnNewKeysReceived(Renci.SshNet.Messages.Transport.NewKeysMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Transport.NewKeysMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Transport.NewKeysMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUserAuthenticationRequestReceived(Renci.SshNet.Messages.Authentication.RequestMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Authentication.RequestMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUserAuthenticationFailureReceived(Renci.SshNet.Messages.Authentication.FailureMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Authentication.FailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Authentication.FailureMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUserAuthenticationSuccessReceived(Renci.SshNet.Messages.Authentication.SuccessMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Authentication.SuccessMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Authentication.SuccessMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnUserAuthenticationBannerReceived(Renci.SshNet.Messages.Authentication.BannerMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Authentication.BannerMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Authentication.BannerMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnGlobalRequestReceived(Renci.SshNet.Messages.Connection.GlobalRequestMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnRequestSuccessReceived(Renci.SshNet.Messages.Connection.RequestSuccessMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnRequestFailureReceived(Renci.SshNet.Messages.Connection.RequestFailureMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.RequestFailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.RequestFailureMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelOpenReceived(Renci.SshNet.Messages.Connection.ChannelOpenMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelOpenConfirmationReceived(Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelOpenFailureReceived(Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelWindowAdjustReceived(Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelDataReceived(Renci.SshNet.Messages.Connection.ChannelDataMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelExtendedDataReceived(Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelEofReceived(Renci.SshNet.Messages.Connection.ChannelEofMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelCloseReceived(Renci.SshNet.Messages.Connection.ChannelCloseMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelRequestReceived(Renci.SshNet.Messages.Connection.ChannelRequestMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelSuccessReceived(Renci.SshNet.Messages.Connection.ChannelSuccessMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnChannelFailureReceived(Renci.SshNet.Messages.Connection.ChannelFailureMessage)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.OnMessageReceived(Renci.SshNet.Messages.Message)">
            <summary>
            Called when <see cref="T:Renci.SshNet.Messages.Message"/> message received.
            </summary>
            <param name="message"><see cref="T:Renci.SshNet.Messages.Message"/> message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.Read(System.Int32)">
            <summary>
            Reads the specified length of bytes from the server
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Session.Write(System.Byte[])">
            <summary>
            Writes the specified data to the server.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Renci.SshNet.Session.RegisterMessage(System.String)">
            <summary>
            Registers SSH Message with the session.
            </summary>
            <param name="messageName">Name of the message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.UnRegisterMessage(System.String)">
            <summary>
            Removes SSH message from the session
            </summary>
            <param name="messageName">Name of the message.</param>
        </member>
        <member name="M:Renci.SshNet.Session.LoadMessage(System.Byte[])">
            <summary>
            Loads the message.
            </summary>
            <param name="data">Message data.</param>
            <returns>New message</returns>
        </member>
        <member name="M:Renci.SshNet.Session.MessageListener">
            <summary>
            Listens for incoming message from the server and handles them. This method run as a task on separate thread.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.RaiseError(System.Exception)">
            <summary>
            Raises the <see cref="E:Renci.SshNet.Session.ErrorOccured"/> event.
            </summary>
            <param name="exp">The exp.</param>
        </member>
        <member name="M:Renci.SshNet.Session.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Session.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Session.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Session"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Session.SessionSemaphore">
            <summary>
            Gets the session semaphore that controls session channels.
            </summary>
            <value>The session semaphore.</value>
        </member>
        <member name="P:Renci.SshNet.Session.NextChannelNumber">
            <summary>
            Gets the next channel number.
            </summary>
            <value>The next channel number.</value>
        </member>
        <member name="P:Renci.SshNet.Session.IsConnected">
            <summary>
            Gets a value indicating whether socket connected.
            </summary>
            <value>
            	<c>true</c> if socket connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Session.SessionId">
            <summary>
            Gets or sets the session id.
            </summary>
            <value>The session id.</value>
        </member>
        <member name="P:Renci.SshNet.Session.ClientInitMessage">
            <summary>
            Gets the client init message.
            </summary>
            <value>The client init message.</value>
        </member>
        <member name="P:Renci.SshNet.Session.ServerVersion">
            <summary>
            Gets or sets the server version string.
            </summary>
            <value>The server version.</value>
        </member>
        <member name="P:Renci.SshNet.Session.ClientVersion">
            <summary>
            Gets or sets the client version string.
            </summary>
            <value>The client version.</value>
        </member>
        <member name="P:Renci.SshNet.Session.ConnectionInfo">
            <summary>
            Gets or sets the connection info.
            </summary>
            <value>The connection info.</value>
        </member>
        <member name="E:Renci.SshNet.Session.ErrorOccured">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.Disconnected">
            <summary>
            Occurs when session has been disconnected form the server.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.DisconnectReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.DisconnectMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.IgnoreReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.IgnoreMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UnimplementedReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.UnimplementedMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.DebugReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.DebugMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ServiceRequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ServiceAcceptReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.KeyExchangeInitReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.NewKeysReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Transport.NewKeysMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UserAuthenticationRequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UserAuthenticationFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Authentication.FailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UserAuthenticationSuccessReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Authentication.SuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.UserAuthenticationBannerReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Authentication.BannerMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.GlobalRequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage"/> message received
            </summary>        
        </member>
        <member name="E:Renci.SshNet.Session.RequestSuccessReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.RequestFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.RequestFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelOpenReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelOpenConfirmationReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelOpenFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelWindowAdjustReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelExtendedDataReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelEofReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelCloseReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelRequestReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelSuccessReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.ChannelFailureReceived">
            <summary>
            Occurs when <see cref="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage"/> message received
            </summary>
        </member>
        <member name="E:Renci.SshNet.Session.MessageReceived">
            <summary>
            Occurs when message received and is not handled by any of the event handlers
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.UnimplementedMessage">
            <summary>
            Represents SSH_MSG_UNIMPLEMENTED message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.DebugMessage">
            <summary>
            Represents SSH_MSG_DEBUG message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DebugMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.DebugMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.IsAlwaysDisplay">
            <summary>
            Gets a value indicating whether the message to be always displayed.
            </summary>
            <value>
            	<c>true</c> if the message always to be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.Message">
            <summary>
            Gets debug message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.DebugMessage.Language">
            <summary>
            Gets message language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.ForwardedPortRemote">
            <summary>
            Provides functionality for remote port forwarding
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Start">
            <summary>
            Starts remote port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Stop">
            <summary>
            Stops remote port forwarding.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.ForwardedPortRemote.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.ForwardedPortRemote"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.CipherDES">
            <summary>
            Represents DES-CBC encryption.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherDES.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.CipherDES"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.CipherDES.Encrypt(System.Byte[])">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Encrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherDES.Decrypt(System.Byte[])">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>
            Decrypted data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.CipherDES.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Renci.SshNet.Security.CipherDES.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.CipherDES.KeySize">
            <summary>
            Gets or sets the key size, in bits, of the secret key used by the cipher.
            </summary>
            <value>
            The key size, in bits.
            </value>
        </member>
        <member name="P:Renci.SshNet.Security.CipherDES.BlockSize">
            <summary>
            Gets or sets the block size, in bits, of the cipher operation.
            </summary>
            <value>
            The block size, in bits.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup">
            <summary>
            Represents SSH_MSG_KEX_DH_GEX_GROUP message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SafePrime">
            <summary>
            Gets or sets the safe prime.
            </summary>
            <value>
            The safe prime.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SubGroup">
            <summary>
            Gets or sets the generator for subgroup in GF(p).
            </summary>
            <value>
            The sub group.
            </value>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpFileStream">
            <summary>
            Exposes a System.IO.Stream around a remote SFTP file, supporting both synchronous and asynchronous read and write operations.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Sftp.SftpFileStream"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in <paramref name="buffer"/> at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous read, which could still be pending.
            </returns>
            <exception cref="T:System.IO.IOException">Attempted an asynchronous read past the end of the stream, or a disk error occurs. </exception>
              
            <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
              
            <exception cref="T:System.NotSupportedException">The current Stream implementation does not support the read operation. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>
            The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="asyncResult"/> is null. </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="asyncResult"/> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> method on the current stream. </exception>
              
            <exception cref="T:System.IO.IOException">The stream is closed or an internal error has occurred.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in <paramref name="buffer"/> from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>
            An IAsyncResult that represents the asynchronous write, which could still be pending.
            </returns>
            <exception cref="T:System.IO.IOException">Attempted an asynchronous write past the end of the stream, or a disk error occurs. </exception>
              
            <exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
              
            <exception cref="T:System.NotSupportedException">The current Stream implementation does not support the write operation. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="asyncResult"/> is null. </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="asyncResult"/> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> method on the current stream. </exception>
              
            <exception cref="T:System.IO.IOException">The stream is closed or an internal error has occurred.</exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the file.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is larger than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length. </exception>
              
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null. </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative. </exception>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support writing, or the stream is already closed. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.FlushReadBuffer">
            <summary>
            Flushes the read data from the buffer.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.FlushWriteBuffer">
            <summary>
            Flush any buffered write data to the file.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.SetupRead">
            <summary>
            Setups the read.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFileStream.SetupWrite">
            <summary>
            Setups the write.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
              
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <returns>The current position within the stream.</returns>
              
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
              
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
              
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.IsAsync">
            <summary>
            Gets a value indicating whether the FileStream was opened asynchronously or synchronously.
            </summary>
            <value>
              <c>true</c> if this instance is async; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Name">
            <summary>
            Gets the name of the FileStream that was passed to the constructor.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Handle">
            <summary>
            Gets the operating system file handle for the file that the current SftpFileStream object encapsulates.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFileStream.Timeout">
            <summary>
            Gets or sets the operation timeout.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.CipherModeEx">
            <summary>
            Provides additional cipher modes
            </summary>
        </member>
        <member name="F:Renci.SshNet.Security.Cryptography.CipherModeEx.CTR">
            <summary>
            Counter Block Cipher mode
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.XonXoffRequestInfo">
            <summary>
            Represents "xon-xoff" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.NAME">
            <summary>
            Channel request type
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.XonXoffRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.XonXoffRequestInfo"/> class.
            </summary>
            <param name="clientCanDo">if set to <c>true</c> [client can do].</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.XonXoffRequestInfo.ClientCanDo">
            <summary>
            Gets or sets a value indicating whether client can do.
            </summary>
            <value>
              <c>true</c> if client can do; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo">
            <summary>
            Represents "pty-req" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.#ctor(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo"/> class.
            </summary>
            <param name="environmentVariable">The environment variable.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalMode">The terminal mode.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.EnvironmentVariable">
            <summary>
            Gets or sets the environment variable.
            </summary>
            <value>
            The environment variable.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.Columns">
            <summary>
            Gets or sets the columns.
            </summary>
            <value>
            The columns.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.Rows">
            <summary>
            Gets or sets the rows.
            </summary>
            <value>
            The rows.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.PixelWidth">
            <summary>
            Gets or sets the width of the pixel.
            </summary>
            <value>
            The width of the pixel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.PixelHeight">
            <summary>
            Gets or sets the height of the pixel.
            </summary>
            <value>
            The height of the pixel.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.PseudoTerminalRequestInfo.TerminalMode">
            <summary>
            Gets or sets the terminal mode.
            </summary>
            <value>
            The terminal mode.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo">
            <summary>
            Represents "env" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.NAME">
            <summary>
            Channel request name
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo"/> class.
            </summary>
            <param name="variableName">Name of the variable.</param>
            <param name="variableValue">The variable value.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.VariableName">
            <summary>
            Gets or sets the name of the variable.
            </summary>
            <value>
            The name of the variable.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.EnvironmentVariableRequestInfo.VariableValue">
            <summary>
            Gets or sets the variable value.
            </summary>
            <value>
            The variable value.
            </value>
        </member>
        <member name="T:Renci.SshNet.Common.PortForwardEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.ForwardedPort.RequestReceived"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.PortForwardEventArgs.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.PortForwardEventArgs"/> class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorHost">
            <summary>
            Gets request originator host.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorPort">
            <summary>
            Gets request originator port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationBannerEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationBannerEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationBannerEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="message">Banner message.</param>
            <param name="language">Banner language.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.BannerMessage">
            <summary>
            Gets banner message.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.Language">
            <summary>
            Gets banner language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.CommandAsyncResult">
            <summary>
            Provides additional information for asynchronous command execution
            </summary>
        </member>
        <member name="F:Renci.SshNet.CommandAsyncResult._command">
            <summary>
            Gets or sets the command that async result was created for.
            </summary>
            <value>The channel.</value>
        </member>
        <member name="M:Renci.SshNet.CommandAsyncResult.#ctor(Renci.SshNet.SshCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.CommandAsyncResult"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.BytesReceived">
            <summary>
            Gets or sets the bytes received. If SFTP only file bytes are counted.
            </summary>
            <value>Total bytes received.</value>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.BytesSent">
            <summary>
            Gets or sets the bytes sent by SFTP.
            </summary>
            <value>Total bytes sent.</value>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <returns>A user-defined object that qualifies or contains information about an asynchronous operation.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.AsyncWaitHandle">
            <summary>
            Gets a <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A <see cref="T:System.Threading.WaitHandle"/> that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.CompletedSynchronously">
            <summary>
            Gets a value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <returns>true if the asynchronous operation completed synchronously; otherwise, false.</returns>
        </member>
        <member name="P:Renci.SshNet.CommandAsyncResult.IsCompleted">
            <summary>
            Gets a value that indicates whether the asynchronous operation has completed.
            </summary>
            <returns>true if the operation is complete; otherwise, false.</returns>
        </member>
        <member name="T:Renci.SshNet.Sftp.SftpFile">
            <summary>
            Represents SFTP file information
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.#ctor(Renci.SshNet.Sftp.SftpSession,System.String,Renci.SshNet.Sftp.SftpFileAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Sftp.SftpFile"/> class.
            </summary>
            <param name="sftpSession">The SFTP session.</param>
            <param name="fullName">Full path of the directory or file.</param>
            <param name="attributes">Attributes of the directory or file.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.SetPermissions(System.Int16)">
            <summary>
            Sets file  permissions.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.Delete">
            <summary>
            Permanently deletes a file on remote machine.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.MoveTo(System.String)">
            <summary>
            Moves a specified file to a new location on remote machine, providing the option to specify a new file name.
            </summary>
            <param name="destFileName">The path to move the file to, which can specify a different file name.</param>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.UpdateStatus">
            <summary>
            Updates file status on the server.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Sftp.SftpFile.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.FullName">
            <summary>
            Gets the full path of the directory or file.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.Name">
            <summary>
            For files, gets the name of the file. For directories, gets the name of the last directory in the hierarchy if a hierarchy exists. 
            Otherwise, the Name property gets the name of the directory.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.LastAccessTime">
            <summary>
            Gets or sets the time the current file or directory was last accessed.
            </summary>
            <value>
            The time that the current file or directory was last accessed.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.LastWriteTime">
            <summary>
            Gets or sets the time when the current file or directory was last written to.
            </summary>
            <value>
            The time the current file was last written.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.Size">
            <summary>
            Gets or sets the size, in bytes, of the current file.
            </summary>
            <value>
            The size of the current file in bytes.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.UserId">
            <summary>
            Gets or sets file user id.
            </summary>
            <value>
            File user id.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.GroupId">
            <summary>
            Gets or sets file group id.
            </summary>
            <value>
            File group id.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsSocket">
            <summary>
            Gets a value indicating whether file represents a socket.
            </summary>
            <value>
              <c>true</c> if file represents a socket; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsSymbolicLink">
            <summary>
            Gets a value indicating whether file represents a symbolic link.
            </summary>
            <value>
            	<c>true</c> if file represents a symbolic link; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsRegularFile">
            <summary>
            Gets a value indicating whether file represents a regular file.
            </summary>
            <value>
            	<c>true</c> if file represents a regular file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsBlockDevice">
            <summary>
            Gets a value indicating whether file represents a block device.
            </summary>
            <value>
            	<c>true</c> if file represents a block device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsDirectory">
            <summary>
            Gets a value indicating whether file represents a directory.
            </summary>
            <value>
            	<c>true</c> if file represents a directory; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsCharacterDevice">
            <summary>
            Gets a value indicating whether file represents a character device.
            </summary>
            <value>
            	<c>true</c> if file represents a character device; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.IsNamedPipe">
            <summary>
            Gets a value indicating whether file represents a named pipe.
            </summary>
            <value>
            	<c>true</c> if file represents a named pipe; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OwnerCanRead">
            <summary>
            Gets or sets a value indicating whether the owner can read from this file.
            </summary>
            <value>
              <c>true</c> if owner can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OwnerCanWrite">
            <summary>
            Gets or sets a value indicating whether the owner can write into this file.
            </summary>
            <value>
              <c>true</c> if owner can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OwnerCanExecute">
            <summary>
            Gets or sets a value indicating whether the owner can execute this file.
            </summary>
            <value>
              <c>true</c> if owner can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.GroupCanRead">
            <summary>
            Gets or sets a value indicating whether the group members can read from this file.
            </summary>
            <value>
              <c>true</c> if group members can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.GroupCanWrite">
            <summary>
            Gets or sets a value indicating whether the group members can write into this file.
            </summary>
            <value>
              <c>true</c> if group members can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.GroupCanExecute">
            <summary>
            Gets or sets a value indicating whether the group members can execute this file.
            </summary>
            <value>
              <c>true</c> if group members can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OthersCanRead">
            <summary>
            Gets or sets a value indicating whether the others can read from this file.
            </summary>
            <value>
              <c>true</c> if others can read from this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OthersCanWrite">
            <summary>
            Gets or sets a value indicating whether the others can write into this file.
            </summary>
            <value>
              <c>true</c> if others can write into this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.OthersCanExecute">
            <summary>
            Gets or sets a value indicating whether the others can execute this file.
            </summary>
            <value>
              <c>true</c> if others can execute this file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Renci.SshNet.Sftp.SftpFile.Extensions">
            <summary>
            Gets the extension part of the file.
            </summary>
            <value>
            File extensions.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo">
            <summary>
            Represents "exit-status" type channel request information
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.NAME">
            <summary>
            Channel request name.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo"/> class.
            </summary>
            <param name="exitStatus">The exit status number.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.RequestName">
            <summary>
            Gets the name of the request.
            </summary>
            <value>
            The name of the request.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.ExitStatusRequestInfo.ExitStatus">
            <summary>
            Gets the exit status number.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo">
            <summary>
            Used to open "direct-tcpip" channel type
            </summary>
        </member>
        <member name="F:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.NAME">
            <summary>
            Specifies channel open type
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo"/> class.
            </summary>
            <param name="hostToConnect">The host to connect.</param>
            <param name="portToConnect">The port to connect.</param>
            <param name="originatorAddress">The originator address.</param>
            <param name="originatorPort">The originator port.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.ChannelType">
            <summary>
            Gets the type of the channel to open.
            </summary>
            <value>
            The type of the channel to open.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.HostToConnect">
            <summary>
            Gets the host to connect.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.PortToConnect">
            <summary>
            Gets the port to connect.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.OriginatorAddress">
            <summary>
            Gets the originator address.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.DirectTcpipChannelInfo.OriginatorPort">
            <summary>
            Gets the originator port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.SshConnectionException">
            <summary>
            The exception that is thrown when connection was terminated.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="disconnectReasonCode">The disconnect reason code.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="disconnectReasonCode">The disconnect reason code.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.SshConnectionException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="M:Renci.SshNet.Common.SshConnectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Renci.SshNet.Common.SshConnectionException.DisconnectReason">
            <summary>
            Gets the disconnect reason if provided by the server or client. Otherwise None.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey">
            <summary>
            Represents "publickey" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="keyAlgorithmName">Name of private key algorithm.</param>
            <param name="keyData">Private key data.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="keyAlgorithmName">Name of private key algorithm.</param>
            <param name="keyData">Private key data.</param>
            <param name="signature">Private key signature.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyAlgorithmName">
            <summary>
            Gets the name of the public key algorithm.
            </summary>
            <value>
            The name of the public key algorithm.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyData">
            <summary>
            Gets the public key data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.Signature">
            <summary>
            Gets or sets public key signature.
            </summary>
            <value>
            The signature.
            </value>
        </member>
        <member name="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage">
            <summary>
            Represents SSH_MSG_KEXDH_REPLY message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.HostKey">
            <summary>
            Gets server public host key and certificates
            </summary>
            <value>The host key.</value>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.F">
            <summary>
            Gets the F value.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.Signature">
            <summary>
            Gets the signature of H.
            </summary>
            <value>The signature.</value>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.ChannelEofMessage">
            <summary>
            Represents SSH_MSG_CHANNEL_EOF message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.ChannelEofMessage"/> class.
            </summary>
            <param name="localChannelNumber">The local channel number.</param>
        </member>
        <member name="T:Renci.SshNet.Extensions">
            <summary>
            Collection of different extension method
            </summary>
        </member>
        <member name="M:Renci.SshNet.Extensions.IsEqualTo``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Checks whether a collection is the same as another collection
            </summary>
            <param name="value">The current instance object</param>
            <param name="compareList">The collection to compare with</param>
            <param name="comparer">The comparer object to use to compare each item in the collection.  If null uses EqualityComparer(T).Default</param>
            <returns>True if the two collections contain all the same items in the same order</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.IsEqualTo``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Checks whether a collection is the same as another collection
            </summary>
            <param name="value">The current instance object</param>
            <param name="compareList">The collection to compare with</param>
            <returns>True if the two collections contain all the same items in the same order</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.DebugPrint(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Prints out 
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:Renci.SshNet.Extensions.TrimLeadingZero(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Trims the leading zero from bytes array.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.CreateInstance``1(System.Type)">
            <summary>
            Creates an instance of the specified type using that type's default constructor.
            </summary>
            <typeparam name="T">The type to create.</typeparam>
            <param name="type">Type of the instance to create.</param>
            <returns>A reference to the newly created object.</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.GetBytes(System.UInt16)">
            <summary>
            Returns the specified 16-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 2.</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.GetBytes(System.UInt32)">
            <summary>
            Returns the specified 32-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 4.</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.GetBytes(System.UInt64)">
            <summary>
            Returns the specified 64-bit unsigned integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="M:Renci.SshNet.Extensions.GetBytes(System.Int64)">
            <summary>
            Returns the specified 64-bit signed integer value as an array of bytes.
            </summary>
            <param name="value">The number to convert.</param>
            <returns>An array of bytes with length 8.</returns>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.StatusCodes.Ok">
            <summary>
            SSH_FX_OK
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.StatusCodes.Eof">
            <summary>
            SSH_FX_EOF
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.StatusCodes.NoSuchFile">
            <summary>
            SSH_FX_NO_SUCH_FILE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.StatusCodes.PermissionDenied">
            <summary>
            SSH_FX_PERMISSION_DENIED
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.StatusCodes.Failure">
            <summary>
            SSH_FX_FAILURE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.StatusCodes.BadMessage">
            <summary>
            SSH_FX_BAD_MESSAGE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.StatusCodes.NoConnection">
            <summary>
            SSH_FX_NO_CONNECTION
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.StatusCodes.ConnectionLost">
            <summary>
            SSH_FX_CONNECTION_LOST
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.StatusCodes.OperationUnsupported">
            <summary>
            SSH_FX_OP_UNSUPPORTED
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword">
            <summary>
            Represents "password" SSH_MSG_USERAUTH_REQUEST message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePassword.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePassword.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Authentication.RequestMessagePassword"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="username">Authentication username.</param>
            <param name="password">Authentication password.</param>
            <param name="newPassword">New authentication password.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Authentication.RequestMessagePassword.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePassword.MethodName">
            <summary>
            Gets the name of the authentication method.
            </summary>
            <value>
            The name of the method.
            </value>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePassword.Password">
            <summary>
            Gets authentication password.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Authentication.RequestMessagePassword.NewPassword">
            <summary>
            Gets new authentication password.
            </summary>
        </member>
        <member name="T:Renci.SshNet.PrivateKeyFile">
            <summary>
            old private key information/
            </summary>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.GetSignature(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Gets the signature.
            </summary>
            <param name="sessionId">The session id.</param>
            <returns>Signature data</returns>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyFile"/> class.
            </summary>
            <param name="privateKey">The private key.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyFile"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyFile"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="passPhrase">The pass phrase.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.PrivateKeyFile"/> class.
            </summary>
            <param name="privateKey">The private key.</param>
            <param name="passPhrase">The pass phrase.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.Open(System.IO.Stream,System.String)">
            <summary>
            Opens the specified private key.
            </summary>
            <param name="privateKey">The private key.</param>
            <param name="passPhrase">The pass phrase.</param>
        </member>
        <member name="M:Renci.SshNet.PrivateKeyFile.DecryptKey(Renci.SshNet.Security.Cipher,System.Byte[],System.String,System.Byte[])">
            <summary>
            Decrypts encrypted private key file data.
            </summary>
            <param name="cipher">Encryption cipher.</param>
            <param name="cipherData">Encrypted data.</param>
            <param name="passPhrase">Decryption pass phrase.</param>
            <param name="binarySalt">Decryption binary salt.</param>
            <returns></returns>
        </member>
        <member name="P:Renci.SshNet.PrivateKeyFile.AlgorithmName">
            <summary>
            Gets the name of private key algorithm.
            </summary>
            <value>
            The name of the algorithm.
            </value>
        </member>
        <member name="P:Renci.SshNet.PrivateKeyFile.PublicKey">
            <summary>
            Gets the public key.
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.Flags.Read">
            <summary>
            SSH_FXF_READ
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.Flags.Write">
            <summary>
            SSH_FXF_WRITE
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.Flags.Append">
            <summary>
            SSH_FXF_APPEND
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.Flags.CreateNewOrOpen">
            <summary>
            SSH_FXF_CREAT
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.Flags.Truncate">
            <summary>
            SSH_FXF_TRUNC
            </summary>
        </member>
        <member name="F:Renci.SshNet.Sftp.Messages.Flags.CreateNew">
            <summary>
            SSH_FXF_EXCL
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.MakeWorkingKey(System.Byte[])">
             Expand a user-supplied key material into a session key.
            
             @param key  The user-key bytes (multiples of 4) to use.
             @exception ArgumentException
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Sb0(System.Int32,System.Int32,System.Int32,System.Int32)">
            S0 - { 3, 8,15, 1,10, 6, 5,11,14,13, 4, 2, 7, 0, 9,12 } - 15 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Ib0(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvSO - {13, 3,11, 0,10, 6, 5,12, 1,14, 4, 7,15, 9, 8, 2 } - 15 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Sb1(System.Int32,System.Int32,System.Int32,System.Int32)">
            S1 - {15,12, 2, 7, 9, 0, 5,10, 1,11,14, 8, 6,13, 3, 4 } - 14 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Ib1(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS1 - { 5, 8, 2,14,15, 6,12, 3,11, 4, 7, 9, 1,13,10, 0 } - 14 steps.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Sb2(System.Int32,System.Int32,System.Int32,System.Int32)">
            S2 - { 8, 6, 7, 9, 3,12,10,15,13, 1,14, 4, 0,11, 5, 2 } - 16 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Ib2(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS2 - {12, 9,15, 4,11,14, 1, 2, 0, 3, 6,13, 5, 8,10, 7 } - 16 steps.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Sb3(System.Int32,System.Int32,System.Int32,System.Int32)">
            S3 - { 0,15,11, 8,12, 9, 6, 3,13, 1, 2, 4,10, 7, 5,14 } - 16 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Ib3(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS3 - { 0, 9,10, 7,11,14, 6,13, 3, 5,12, 2, 4, 8,15, 1 } - 15 terms
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Sb4(System.Int32,System.Int32,System.Int32,System.Int32)">
            S4 - { 1,15, 8, 3,12, 0,11, 6, 2, 5, 4,10, 9,14, 7,13 } - 15 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Ib4(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS4 - { 5, 0, 8, 3,10, 9, 7,14, 2,12,11, 6, 4,15,13, 1 } - 15 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Sb5(System.Int32,System.Int32,System.Int32,System.Int32)">
            S5 - {15, 5, 2,11, 4,10, 9,12, 0, 3,14, 8,13, 6, 7, 1 } - 16 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Ib5(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS5 - { 8,15, 2, 9, 4, 1,13,14,11, 6, 5, 3, 7,12,10, 0 } - 16 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Sb6(System.Int32,System.Int32,System.Int32,System.Int32)">
            S6 - { 7, 2,12, 5, 8, 4, 6,11,14, 9, 1,15,13, 3,10, 0 } - 15 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Ib6(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS6 - {15,10, 1,13, 5, 3, 6, 0, 4, 9,14, 7, 2,12, 8,11 } - 15 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Sb7(System.Int32,System.Int32,System.Int32,System.Int32)">
            S7 - { 1,13,15, 0,14, 8, 2,11, 7, 4,12,10, 9, 3, 5, 6 } - 16 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.Ib7(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS7 - { 3, 0, 6,13, 9,14,15, 8, 5,12,11, 7,10, 1, 4, 2 } - 17 terms.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.LT">
            Apply the linear transformation to the register set.
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.SerpentCipher.InverseLT">
            Apply the inverse of the linear transformation to the register set.
        </member>
        <member name="T:Renci.SshNet.Common.ChannelOpenFailedEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.Channel.OpenFailed"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelOpenFailedEventArgs.#ctor(System.UInt32,System.UInt32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelOpenFailedEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="reasonCode">Failure reason code.</param>
            <param name="description">Failure description.</param>
            <param name="language">Failure language.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenFailedEventArgs.ReasonCode">
            <summary>
            Gets failure reason code.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenFailedEventArgs.Description">
            <summary>
            Gets failure description.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelOpenFailedEventArgs.Language">
            <summary>
            Gets failure language.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Shell">
            <summary>
            Represents instance of the SSH shell object
            </summary>
        </member>
        <member name="M:Renci.SshNet.Shell.#ctor(Renci.SshNet.Session,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Shell"/> class.
            </summary>
            <param name="session">The session.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <param name="extendedOutput">The extended output.</param>
            <param name="terminalName">Name of the terminal.</param>
            <param name="columns">The columns.</param>
            <param name="rows">The rows.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="terminalMode">The terminal mode.</param>
            <param name="bufferSize">Size of the buffer for output stream.</param>
        </member>
        <member name="M:Renci.SshNet.Shell.Start">
            <summary>
            Starts this shell.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Shell.Stop">
            <summary>
            Stops this shell.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Shell.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged ResourceMessages.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Shell.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged ResourceMessages.</param>
        </member>
        <member name="M:Renci.SshNet.Shell.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Renci.SshNet.Session"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Shell.IsStarted">
            <summary>
            Gets a value indicating whether this shell is started.
            </summary>
            <value>
            	<c>true</c> if started is started; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Renci.SshNet.Shell.Starting">
            <summary>
            Occurs when shell is starting.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Shell.Started">
            <summary>
            Occurs when shell is started.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Shell.Stopping">
            <summary>
            Occurs when shell is stopping.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Shell.Stopped">
            <summary>
            Occurs when shell is stopped.
            </summary>
        </member>
        <member name="E:Renci.SshNet.Shell.ErrorOccurred">
            <summary>
            Occurs when an error occurred.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage">
            <summary>
            Represents SSH_MSG_REQUEST_SUCCESS message.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> class.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage"/> class.
            </summary>
            <param name="boundPort">The bound port.</param>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.LoadData">
            <summary>
            Called when type specific data need to be loaded.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.SaveData">
            <summary>
            Called when type specific data need to be saved.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Messages.Connection.RequestSuccessMessage.BoundPort">
            <summary>
            Gets the bound port.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Compression.ZlibOpenSsh">
            <summary>
            Represents "zlib@openssh.org" compression implementation
            </summary>
        </member>
        <member name="M:Renci.SshNet.Compression.ZlibOpenSsh.Init(Renci.SshNet.Session)">
            <summary>
            Initializes the algorithm
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Renci.SshNet.Compression.ZlibOpenSsh.Compress(System.Byte[])">
            <summary>
            Compresses the specified data.
            </summary>
            <param name="data">Data to compress.</param>
            <returns>
            Compressed data
            </returns>
        </member>
        <member name="M:Renci.SshNet.Compression.ZlibOpenSsh.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified data.
            </summary>
            <param name="data">Compressed data.</param>
            <returns>
            Decompressed data.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Compression.ZlibOpenSsh.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1">
            <summary>
            Represents "diffie-hellman-group-exchange-sha1" algorithm implementation.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1.CalculateHash">
            <summary>
            Calculates key exchange hash value.
            </summary>
            <returns>
            Key exchange hash.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
            <summary>
            Starts key exchange algorithm
            </summary>
            <param name="session">The session.</param>
            <param name="message">Key exchange init message.</param>
        </member>
        <member name="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1.Finish">
            <summary>
            Finishes key exchange algorithm.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha1.Name">
            <summary>
            Gets algorithm name.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.OfbMode">
            <summary>
            Represents the class for the OFB Block Cipher.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.OfbMode.#ctor(Renci.SshNet.Security.Cryptography.CipherBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.OfbMode"/> class.
            </summary>
            <param name="cipher">The cipher.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.OfbMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.OfbMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="P:Renci.SshNet.Security.Cryptography.OfbMode.BlockSize">
            <summary>
            Gets the size of the block.
            </summary>
            <value>
            The size of the block.
            </value>
        </member>
        <member name="T:Renci.SshNet.Security.Cryptography.TripleDesCipher">
            <summary>
            Represents the class for the 3DES algorithm.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.TripleDesCipher.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Security.Cryptography.TripleDesCipher"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="iv">The iv.</param>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.TripleDesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encrypts the specified region of the input byte array and copies the encrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to encrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write encrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes encrypted.
            </returns>
        </member>
        <member name="M:Renci.SshNet.Security.Cryptography.TripleDesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decrypts the specified region of the input byte array and copies the decrypted data to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input data to decrypt.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write decrypted data.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>
            The number of bytes decrypted.
            </returns>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelRequestEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.Channel.RequestReceived"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelRequestEventArgs.#ctor(Renci.SshNet.Messages.Connection.RequestInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelRequestEventArgs"/> class.
            </summary>
            <param name="info">Request information.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelRequestEventArgs.Info">
            <summary>
            Gets request information.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.ChannelDataEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.Channels.Channel.DataReceived"/> event and <see cref="E:Renci.SshNet.Channels.Channel.ExtendedDataReceived"/> events.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelDataEventArgs.#ctor(System.UInt32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelDataEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="data">Channel data.</param>
        </member>
        <member name="M:Renci.SshNet.Common.ChannelDataEventArgs.#ctor(System.UInt32,System.Byte[],System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.ChannelDataEventArgs"/> class.
            </summary>
            <param name="channelNumber">Channel number.</param>
            <param name="data">Channel data.</param>
            <param name="dataTypeCode">Channel data type code.</param>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelDataEventArgs.Data">
            <summary>
            Gets channel data.
            </summary>
        </member>
        <member name="P:Renci.SshNet.Common.ChannelDataEventArgs.DataTypeCode">
            <summary>
            Gets the data type code.
            </summary>
        </member>
        <member name="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs">
            <summary>
            Provides data for <see cref="E:Renci.SshNet.PasswordConnectionInfo.PasswordExpired"/> event.
            </summary>
        </member>
        <member name="M:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="P:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
            <value>
            The new password.
            </value>
        </member>
    </members>
</doc>
